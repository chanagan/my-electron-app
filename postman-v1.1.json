{
    "info": {
        "_postman_id": "78bb232e-3e3d-4471-8839-962d0acf313c",
        "name": "PUBLIC Cloudbeds API v1.1 Calls",
        "description": "# Welcome\n\nWelcome to the documentation for **Cloudbeds API v1.1**!  \nIf you are looking to learn how to use the Cloudbeds API to access guest information, reservations, or similar data for your Cloudbeds customers, then you've come to the right place.\n\nIn this document you will find all the API methods we provide along with explanations for parameters and response examples.\n\nIf you you have questions about different implementation steps (e.g. how to implement OAuth 2.0), please refer to our [Integrations Portal](https:\/\/integrations.cloudbeds.com\/hc\/en-us).\n\nBe sure to [subscribe](https:\/\/go.pardot.com\/l\/308041\/2018-07-24\/qb2lg) to the monthly Cloudbeds API announcement mailing list to receive information on new additions and improvements to the Cloudbeds API and related developer tools.\n\n**Endpoint:** [https:\/\/hotels.cloudbeds.com\/api\/v1.1\/{method}](https:\/\/hotels.cloudbeds.com\/api\/v1.1\/%7Bmethod%7D)\n\n**HTTPS:** Our API requires HTTPS. We'll respond with an appropriate error if you're not using it.\n\n**Request Format:** HTTP GET, POST, and PUT (Content-Type: application\/x-www-form-urlencoded)\n\n**Response Format:** JSON\n\n**Response Header:** X-Request-ID is added to response headers in all calls to help accelerate support and troubleshooting.\n\n# Recommended Articles\n\nBefore you start, make sure to read the [Getting Started](https:\/\/integrations.cloudbeds.com\/hc\/en-us\/sections\/360001353414-Getting-started) and [Authentication](https:\/\/integrations.cloudbeds.com\/hc\/en-us\/sections\/360001386613-Authentication) guides in our  \n[Integrations Portal](https:\/\/integrations.cloudbeds.com\/hc\/en-us). Read the introduction to learn about formats and limits  \nand check out our [sample use cases](https:\/\/integrations.cloudbeds.com\/hc\/en-us\/categories\/360000544314-App-Blueprints-Sample-Use-Cases).\n\nIf you're just considering building to our API and partnering with Cloudbeds [start here](https:\/\/integrations.cloudbeds.com\/hc\/en-us\/articles\/360006626313-API-Integration-Guide).\n\n# Support\n\nHave questions\/comments or found a bug? Feel free to contact us using this [form](https:\/\/integrations.cloudbeds.com\/hc\/en-us\/requests\/new?ticket_form_id=238728). We require that the value for X-Request-ID be submitted. It is added (by the API) to  \nthe header response for every call, this helps us to accelerate your support.\n\nWe must also advise that we do not give support to property level accounts. All requests submitted will be read and if a  \nbug is verified we will solve as soon as possible. Property level accounts may use this documentation, [Integrations Portal](https:\/\/integrations.cloudbeds.com\/hc\/en-us) and [community](https:\/\/integrations.cloudbeds.com\/hc\/en-us\/community\/topics) as support material.\n\n# Versioning\n\nWe avoid making backwards-incompatible changes to the API architecture. On occasion, however, we may need to deprecate  \nan existing method. In these circumstances, we notify any current users of the method and provide recommendations  \nfor next steps as well as a sunset period to implement them.\n\nPlease refer to our [API Changelog](https:\/\/integrations.cloudbeds.com\/hc\/en-us\/sections\/360001561554-Changelog-updates) for recent updates and improvements.\n\n# API Rate Limits\n\nThe Cloudbeds API requires the following rate limits for best experience. Exceeding these limits may result in a  \ntemporary suspension of your API credentials. If this occurs, we will notify you directly via email. Once you  \nconfirm you have adjusted your integration's rate intervals, we will then reactivate your credentials.\n\n## Properties and Associations\n\nOur limit for properties and association are the same: `5 requests per second`\n\n## Tech Partners\n\nCommercial technology partners have a higher rate limit: `10 requests per second`",
        "schema": "https:\/\/schema.getpostman.com\/json\/collection\/v2.1.0\/collection.json",
        "_exporter_id": "21283551"
    },
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "metadata",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/oauth\/metadata",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "oauth\/metadata"
                            ]
                        }
                    }
                },
                {
                    "name": "access_token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"token_type is Bearer\"] = jsonData.token_type === \"Bearer\";",
                                    "",
                                    "if(tests[\"token_type is Bearer\"]){",
                                    "    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
                                    "    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
                                    "}",
                                    ""
                                ]
                            }
                        },
                        {
                            "listen": "prerequest",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "var current = new Date();",
                                    "var tomorrow = new Date(new Date().getTime() + 48 * 60 * 60 * 1000);",
                                    "var dayAfterTomorrow = new Date(new Date().getTime() + 72 * 60 * 60 * 1000);",
                                    "",
                                    "var dd = current.getDate();",
                                    "var mm = current.getMonth() + 1;",
                                    "var yyyy = current.getFullYear();",
                                    "",
                                    "var tdd = tomorrow.getDate();",
                                    "var tmm = tomorrow.getMonth() + 1;",
                                    "var tyyyy = tomorrow.getFullYear();",
                                    "",
                                    "var dadd = dayAfterTomorrow.getDate();",
                                    "var damm = dayAfterTomorrow.getMonth() + 1;",
                                    "var dayyyy = dayAfterTomorrow.getFullYear();",
                                    "",
                                    "if (dd < 10) {",
                                    "    dd = '0' + dd;",
                                    "}",
                                    "if (tdd < 10) {",
                                    "    tdd = '0' + tdd;",
                                    "}",
                                    "if (dadd < 10) {",
                                    "    dadd = '0' + dadd;",
                                    "}",
                                    "if (mm < 10) {",
                                    "    mm = '0' + mm;",
                                    "}",
                                    "if (tmm < 10) {",
                                    "    tmm = '0' + tmm;",
                                    "}",
                                    "if (damm < 10) {",
                                    "    damm = '0' + damm;",
                                    "}",
                                    "",
                                    "var todayString = yyyy+'-'+mm+'-'+dd;",
                                    "var tomorrowString = tyyyy+'-'+tmm+'-'+tdd;",
                                    "var dayAfterTomorrowString = dayyyy+'-'+damm+'-'+dadd;",
                                    "",
                                    "postman.setEnvironmentVariable('startDate', tomorrowString);",
                                    "postman.setEnvironmentVariable('endDate', dayAfterTomorrowString);",
                                    "",
                                    "postman.setEnvironmentVariable('oldStartDate', '1999-01-01');",
                                    "postman.setEnvironmentVariable('oldEndDate', '1999-01-02');"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/access_token",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "access_token"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "grant_type",
                                    "type": "text",
                                    "description": "The OAuth2 grant type.",
                                    "value": "{{grant_type}}",
                                    "disabled": true
                                },
                                {
                                    "key": "client_id",
                                    "type": "text",
                                    "description": "The client identifier. Each client must be provisioned an identifier.",
                                    "value": "{{client_id}}",
                                    "disabled": true
                                },
                                {
                                    "key": "client_secret",
                                    "type": "text",
                                    "description": "The client secret. Each client must be provisioned a secret.",
                                    "value": "{{client_secret}}",
                                    "disabled": true
                                },
                                {
                                    "key": "redirect_uri",
                                    "type": "text",
                                    "description": "The client pre-configured redirect URI. (Required for grant type 'authorization_code' and 'urn:ietf:params:oauth:grant-type:api-key').",
                                    "value": "{{redirect_uri}}",
                                    "disabled": true
                                },
                                {
                                    "key": "code",
                                    "type": "text",
                                    "description": "An authorization code provisioned by \/oauth (Required for grant type 'authorization_code' and 'urn:ietf:params:oauth:grant-type:api-key').",
                                    "value": "{{code}}",
                                    "disabled": true
                                },
                                {
                                    "key": "refresh_token",
                                    "type": "text",
                                    "description": "A refresh token to renew an access_token (Required for grant type 'refresh_token' only).",
                                    "value": "{{refresh_token}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "userinfo",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/userinfo",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "userinfo"
                            ],
                            "query": [
                                {
                                    "key": "property_id",
                                    "value": "{{property_id}}",
                                    "description": "Specify a property ID when using role_details",
                                    "disabled": true
                                },
                                {
                                    "key": "role_details",
                                    "value": "{{role_details}}",
                                    "description": "Specify whether to include role and acl details of the user.",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Adjustment",
            "item": [
                {
                    "name": "getAdjustment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getAdjustment?adjustmentID={{adjustmentID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getAdjustment"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "adjustmentID",
                                    "value": "{{adjustmentID}}",
                                    "description": "Adjustment identifier"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getAdjustments",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getAdjustments?reservationID={{reservationID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getAdjustments"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation identifier"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "deleteAdjustment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/deleteAdjustment?reservationID={{reservationID}}&adjustmentID={{adjustmentID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "deleteAdjustment"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation identifier"
                                },
                                {
                                    "key": "adjustmentID",
                                    "value": "{{adjustmentID}}",
                                    "description": "Adjustment identifier"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postAdjustment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postAdjustment",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postAdjustment"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "type",
                                    "type": "text",
                                    "description": "Apply Adjustment to",
                                    "value": "{{type}}"
                                },
                                {
                                    "key": "amount",
                                    "type": "text",
                                    "description": "Adjustment amount",
                                    "value": "{{amount}}"
                                },
                                {
                                    "key": "notes",
                                    "type": "text",
                                    "description": "Adjustment notes",
                                    "value": "{{notes}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemID",
                                    "type": "text",
                                    "description": "Apply Adjustment to. Identifier for: product, tax, fee. Not for rate",
                                    "value": "{{itemID}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "AllotmentBlocks",
            "item": [
                {
                    "name": "createAllotmentBlock",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/createAllotmentBlock",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "createAllotmentBlock"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "groupCode",
                                    "type": "text",
                                    "description": "The unique identifier of the group profile the allotment block should be created",
                                    "value": "{{groupCode}}"
                                },
                                {
                                    "key": "allotmentBlockName",
                                    "type": "text",
                                    "description": "The name for the allotment block",
                                    "value": "{{allotmentBlockName}}"
                                },
                                {
                                    "key": "rateType",
                                    "type": "text",
                                    "description": "The rate type for the associated intervals",
                                    "value": "{{rateType}}"
                                },
                                {
                                    "key": "allotmentType",
                                    "type": "text",
                                    "description": "The allotment type",
                                    "value": "{{allotmentType}}"
                                },
                                {
                                    "key": "allotmentBlockStatus",
                                    "type": "text",
                                    "description": "The status for the allotment block under",
                                    "value": "{{allotmentBlockStatus}}"
                                },
                                {
                                    "key": "autoRelease[releaseType]",
                                    "type": "text",
                                    "description": "The type of auto-release",
                                    "disabled": true
                                },
                                {
                                    "key": "autoRelease[days]",
                                    "type": "text",
                                    "description": "The number of days prior to the end of the allotment block to begin releasing dates from the allotment block",
                                    "disabled": true
                                },
                                {
                                    "key": "autoRelease[releaseTime]",
                                    "type": "text",
                                    "description": "The hour to being the auto-release in HH:00 format, e.g. '00:00', '01:00'...",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][date]",
                                    "type": "text",
                                    "description": "the day within the interval (YYYY-MM-DD)"
                                },
                                {
                                    "key": "allotmentIntervals[availability][][blockAllotted]",
                                    "type": "text",
                                    "description": "Total number of units available for the"
                                },
                                {
                                    "key": "allotmentIntervals[availability][][rate]",
                                    "type": "text",
                                    "description": "the price if applicable",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][guestPricing][adult1]",
                                    "type": "text",
                                    "description": "Price for adult 1",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][guestPricing][adult2]",
                                    "type": "text",
                                    "description": "Price for adult 2",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][guestPricing][adult3]",
                                    "type": "text",
                                    "description": "Price for adult 3",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][guestPricing][child1]",
                                    "type": "text",
                                    "description": "Price for child 1",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][guestPricing][child2]",
                                    "type": "text",
                                    "description": "Price for child 2",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][guestPricing][child3]",
                                    "type": "text",
                                    "description": "Price for child 3",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][restrictions][minLos]",
                                    "type": "text",
                                    "description": "Minimum length of stay requirement",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][restrictions][maxLos]",
                                    "type": "text",
                                    "description": "Maximum length of stay requirement",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][restrictions][cutOffDays]",
                                    "type": "text",
                                    "description": "How many days before arrival should guests be required to book",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][restrictions][lastMinuteBookingDays]",
                                    "type": "text",
                                    "description": "How many days before the arrival guests are allowed to book",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][restrictions][closedToArrival]",
                                    "type": "text",
                                    "description": "If the interval dates are closed for arrival",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][restrictions][closedToDeparture]",
                                    "type": "text",
                                    "description": "If the interval dates are closed for departure",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[availability][][restrictions][closedToDeparture]",
                                    "type": "text",
                                    "description": "If the interval dates are closed for departure",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getAllotmentBlocks",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getAllotmentBlocks?propertyID={{propertyID}}&allotmentBlockCode={{allotmentBlockCode}}&groupCode={{groupCode}}&allotmentBlockStatus={{allotmentBlockStatus}}&pageSize={{pageSize}}&pageNumber={{pageNumber}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getAllotmentBlocks"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID (optional, by default all authorized properties will be included)"
                                },
                                {
                                    "key": "allotmentBlockCode",
                                    "value": "{{allotmentBlockCode}}",
                                    "description": "Allotment block code"
                                },
                                {
                                    "key": "groupCode",
                                    "value": "{{groupCode}}",
                                    "description": "A group profile code"
                                },
                                {
                                    "key": "allotmentBlockStatus",
                                    "value": "{{allotmentBlockStatus}}",
                                    "description": "Allotment block status(es)"
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Number of allotment blocks to return per page (min: 1, max: 100)"
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Which page in the results to access"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "updateAllotmentBlock",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/updateAllotmentBlock",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "updateAllotmentBlock"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "groupCode",
                                    "type": "text",
                                    "description": "The unique identifier of the group profile the allotment block should be created",
                                    "value": "{{groupCode}}"
                                },
                                {
                                    "key": "allotmentBlockName",
                                    "type": "text",
                                    "description": "The name for the allotment block",
                                    "value": "{{allotmentBlockName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentType",
                                    "type": "text",
                                    "description": "The allotment type",
                                    "value": "{{allotmentType}}",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentBlockStatus",
                                    "type": "text",
                                    "description": "The status for the allotment block under",
                                    "value": "{{allotmentBlockStatus}}",
                                    "disabled": true
                                },
                                {
                                    "key": "autoRelease[releaseType]",
                                    "type": "text",
                                    "description": "The type of auto-release",
                                    "disabled": true
                                },
                                {
                                    "key": "autoRelease[days]",
                                    "type": "text",
                                    "description": "The number of days prior to the end of the allotment block to begin releasing dates from the allotment block",
                                    "disabled": true
                                },
                                {
                                    "key": "autoRelease[releaseTime]",
                                    "type": "text",
                                    "description": "The hour to being the auto-release in HH:00 format, e.g. '00:00', '01:00'...",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][roomTypeId]",
                                    "type": "text",
                                    "description": "Room type id",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][blockAllotted]",
                                    "type": "text",
                                    "description": "Total number of units available for the room type for this day",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][date]",
                                    "type": "text",
                                    "description": "the day within the interval (YYYY-MM-DD)",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][rate]",
                                    "type": "text",
                                    "description": "the price if applicable",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][guestPricing][adult1]",
                                    "type": "text",
                                    "description": "Price for adult 1",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][guestPricing][adult2]",
                                    "type": "text",
                                    "description": "Price for adult 2",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][guestPricing][adult3]",
                                    "type": "text",
                                    "description": "Price for adult 3",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][guestPricing][child1]",
                                    "type": "text",
                                    "description": "Price for child 1",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][guestPricing][child2]",
                                    "type": "text",
                                    "description": "Price for child 2",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][guestPricing][child3]",
                                    "type": "text",
                                    "description": "Price for child 3",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][restrictions][minLos]",
                                    "type": "text",
                                    "description": "Minimum length of stay requirement",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][restrictions][maxLos]",
                                    "type": "text",
                                    "description": "Maximum length of stay requirement",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][restrictions][cutOffDays]",
                                    "type": "text",
                                    "description": "How many days before arrival should guests be required to book",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][restrictions][lastMinuteBookingDays]",
                                    "type": "text",
                                    "description": "How many days before the arrival guests are allowed to book",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][restrictions][closedToArrival]",
                                    "type": "text",
                                    "description": "If the interval dates are closed for arrival",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][restrictions][closedToDeparture]",
                                    "type": "text",
                                    "description": "If the interval dates are closed for departure the number of applicable keys varies here based on the occupancy settings for the room type.",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][restrictions][closedToDeparture]",
                                    "type": "text",
                                    "description": "If the interval dates are closed for departure the number of applicable keys varies here based on the occupancy settings for the room type.",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentIntervals[][availability][][restrictions][closedToDeparture]",
                                    "type": "text",
                                    "description": "If the interval dates are closed for departure the number of applicable keys varies here based on the occupancy settings for the room type.",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "AppSettings",
            "item": [
                {
                    "name": "deleteAppPropertySettings",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/deleteAppPropertySettings",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "deleteAppPropertySettings"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Key",
                                    "value": "{{propertyID}}"
                                },
                                {
                                    "key": "key",
                                    "type": "text",
                                    "description": "Key",
                                    "value": "{{key}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getAppPropertySettings",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getAppPropertySettings?propertyID={{propertyID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getAppPropertySettings"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID"
                                },
                                {
                                    "key": "key",
                                    "value": "{{key}}",
                                    "description": "Key",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postAppPropertySetting",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postAppPropertySetting",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postAppPropertySetting"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}"
                                },
                                {
                                    "key": "appClientID",
                                    "type": "text",
                                    "description": "Application Client ID",
                                    "value": "{{appClientID}}"
                                },
                                {
                                    "key": "key",
                                    "type": "text",
                                    "description": "Key",
                                    "value": "{{key}}"
                                },
                                {
                                    "key": "value",
                                    "type": "text",
                                    "description": "Value",
                                    "value": "{{value}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putAppPropertySettings",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putAppPropertySettings",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putAppPropertySettings"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}"
                                },
                                {
                                    "key": "key",
                                    "type": "text",
                                    "description": "Key",
                                    "value": "{{key}}"
                                },
                                {
                                    "key": "value",
                                    "type": "text",
                                    "description": "Value",
                                    "value": "{{value}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Currency",
            "item": [
                {
                    "name": "getCurrencySettings",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getCurrencySettings",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getCurrencySettings"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "CustomFields",
            "item": [
                {
                    "name": "getCustomFields",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getCustomFields",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getCustomFields"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "customFieldID",
                                    "value": "{{customFieldID}}",
                                    "description": "Field identifier",
                                    "disabled": true
                                },
                                {
                                    "key": "shortcode",
                                    "value": "{{shortcode}}",
                                    "description": "Internal reference and is used for integration purposes such as custom links and the API",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postCustomField",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postCustomField",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postCustomField"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "name",
                                    "type": "text",
                                    "description": "Field name",
                                    "value": "{{name}}"
                                },
                                {
                                    "key": "shortcode",
                                    "type": "text",
                                    "description": "Internal reference and is used for integration purposes such as custom links and the API",
                                    "value": "{{shortcode}}"
                                },
                                {
                                    "key": "applyTo",
                                    "type": "text",
                                    "description": "Where put this field in reservation or guest section of the booking. reservation - applies the custom field to reservations in myfrontdesk guest - applies the custom field to guest interface in myfrontdesk",
                                    "value": "{{applyTo}}",
                                    "disabled": true
                                },
                                {
                                    "key": "required",
                                    "type": "text",
                                    "description": "Specify whether this field is required to be filled out.",
                                    "value": "{{required}}",
                                    "disabled": true
                                },
                                {
                                    "key": "maxCharacters",
                                    "type": "text",
                                    "description": "Maximum number of characters allowed to be entered in this field.",
                                    "value": "{{maxCharacters}}",
                                    "disabled": true
                                },
                                {
                                    "key": "type",
                                    "type": "text",
                                    "description": "The field's input type.",
                                    "value": "{{type}}",
                                    "disabled": true
                                },
                                {
                                    "key": "displayed[]",
                                    "type": "text",
                                    "description": "\u00b9 Specify where this custom field to show up. reservation - applies the custom field to reservation interface in myfrontdesk booking - applies the custom field to the booking engine card - applies the custom field to Registration cards",
                                    "value": "{{displayed}}",
                                    "disabled": true
                                },
                                {
                                    "key": "isPersonal",
                                    "type": "text",
                                    "description": "Specifies if the contents of this field may contain personal information. User's personal information may be removed upon request according to GDPR rules.",
                                    "value": "{{isPersonal}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Dashboard",
            "item": [
                {
                    "name": "getDashboard",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getDashboard",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getDashboard"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "date",
                                    "value": "{{date}}",
                                    "description": "Return data for this date. Format: YYYY-MM-DD",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Emails",
            "item": [
                {
                    "name": "getEmailTemplates",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getEmailTemplates",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getEmailTemplates"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postEmailTemplate",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postEmailTemplate",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postEmailTemplate"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "emailType",
                                    "type": "text",
                                    "description": "Type of the email template: Marketing or Non-Marketing. Only applicable to GDPR-compliant properties.",
                                    "value": "{{emailType}}"
                                },
                                {
                                    "key": "name",
                                    "type": "text",
                                    "description": "Template name",
                                    "value": "{{name}}"
                                },
                                {
                                    "key": "from",
                                    "type": "text",
                                    "description": "Email address from which the email message may be sent",
                                    "value": "{{from}}"
                                },
                                {
                                    "key": "Name",
                                    "type": "text",
                                    "description": "from which the email message may be sent. If empty email will be used",
                                    "value": "{{Name}}"
                                },
                                {
                                    "key": "subject[en]",
                                    "type": "text",
                                    "description": "Email message subject in English",
                                    "disabled": true
                                },
                                {
                                    "key": "subject[es]",
                                    "type": "text",
                                    "description": "Email message subject in Spanish",
                                    "disabled": true
                                },
                                {
                                    "key": "subject[ru]",
                                    "type": "text",
                                    "description": "Email message subject in Russian",
                                    "disabled": true
                                },
                                {
                                    "key": "subject[pt-br]",
                                    "type": "text",
                                    "description": "Email message subject in Portuguese",
                                    "disabled": true
                                },
                                {
                                    "key": "body[en]",
                                    "type": "text",
                                    "description": "Email message body in English",
                                    "disabled": true
                                },
                                {
                                    "key": "body[es]",
                                    "type": "text",
                                    "description": "Email message body in Spanish",
                                    "disabled": true
                                },
                                {
                                    "key": "body[ru]",
                                    "type": "text",
                                    "description": "Email message body in Russian",
                                    "disabled": true
                                },
                                {
                                    "key": "body[pt-br]",
                                    "type": "text",
                                    "description": "Email message body in Portuguese",
                                    "disabled": true
                                },
                                {
                                    "key": "replyTo",
                                    "type": "text",
                                    "description": "Email address to which the email message may be replied. If empty, the value on from parameter will be used.",
                                    "value": "{{replyTo}}",
                                    "disabled": true
                                },
                                {
                                    "key": "replyToName",
                                    "type": "text",
                                    "description": "Name to which the email message may be replied. If empty, email will be used.",
                                    "value": "{{replyToName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "autofillAllLanguages",
                                    "type": "text",
                                    "description": "If set, all languages will be set with the value for the property language. If not informed and only one language is sent, it's considered true, if more than one language is sent, it'll be considered false.",
                                    "value": "{{autofillAllLanguages}}",
                                    "disabled": true
                                },
                                {
                                    "key": "cc",
                                    "type": "text",
                                    "description": "Email address to which the email message may be sent as a Carbon Copy",
                                    "value": "{{cc}}",
                                    "disabled": true
                                },
                                {
                                    "key": "bcc",
                                    "type": "text",
                                    "description": "Email address to which the email message may be sent as a Blind Carbon Copy",
                                    "value": "{{bcc}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getEmailSchedule",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getEmailSchedule",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getEmailSchedule"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postEmailSchedule",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postEmailSchedule",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postEmailSchedule"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "emailTemplateID",
                                    "type": "text",
                                    "description": "ID of the email template that will be used when sending an email.",
                                    "value": "{{emailTemplateID}}"
                                },
                                {
                                    "key": "scheduleName",
                                    "type": "text",
                                    "description": "User friendly schedule name that appears in the list. Should contain app name.",
                                    "value": "{{scheduleName}}"
                                },
                                {
                                    "key": "schedule[reservationStatusChange][status]",
                                    "type": "text",
                                    "description": "Specify which reservation status change triggers sending the email"
                                },
                                {
                                    "key": "schedule[reservationEvent][event]",
                                    "type": "text",
                                    "description": "Specify event that triggers email sending"
                                },
                                {
                                    "key": "schedule[reservationEvent][days]",
                                    "type": "text",
                                    "description": "Number of days prior to or after the event"
                                },
                                {
                                    "key": "schedule[reservationEvent][time]",
                                    "type": "text",
                                    "description": "Time of the day"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Groups",
            "item": [
                {
                    "name": "getGroups",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getGroups?propertyID={{propertyID}}&groupCode={{groupCode}}&type={{type}}&status={{status}}&createdFrom={{createdFrom}}&createdTo={{createdTo}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getGroups"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID"
                                },
                                {
                                    "key": "groupCode",
                                    "value": "{{groupCode}}",
                                    "description": "Unique ID for a group"
                                },
                                {
                                    "key": "type",
                                    "value": "{{type}}",
                                    "description": "The type of group"
                                },
                                {
                                    "key": "status",
                                    "value": "{{status}}",
                                    "description": "Group status"
                                },
                                {
                                    "key": "createdFrom",
                                    "value": "{{createdFrom}}",
                                    "description": "Datetime (lower limit) to be queried"
                                },
                                {
                                    "key": "createdTo",
                                    "value": "{{createdTo}}",
                                    "description": "Datetime (upper limit) to be queried"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "patchGroup",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/patchGroup",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "patchGroup"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "groupCode",
                                    "type": "text",
                                    "description": "code for a group",
                                    "value": "{{groupCode}}"
                                },
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}"
                                },
                                {
                                    "key": "name",
                                    "type": "text",
                                    "description": "Name for a group",
                                    "value": "{{name}}"
                                },
                                {
                                    "key": "type",
                                    "type": "text",
                                    "description": "The type of group",
                                    "value": "{{type}}"
                                },
                                {
                                    "key": "status",
                                    "type": "text",
                                    "description": "Group status",
                                    "value": "{{status}}"
                                },
                                {
                                    "key": "sourceID",
                                    "type": "text",
                                    "description": "Source ID for a group",
                                    "value": "{{sourceID}}"
                                },
                                {
                                    "key": "address1",
                                    "type": "text",
                                    "description": "Address line 1 for a group",
                                    "value": "{{address1}}"
                                },
                                {
                                    "key": "address2",
                                    "type": "text",
                                    "description": "Address line 2 for a group",
                                    "value": "{{address2}}"
                                },
                                {
                                    "key": "city",
                                    "type": "text",
                                    "description": "City for a group",
                                    "value": "{{city}}"
                                },
                                {
                                    "key": "zip",
                                    "type": "text",
                                    "description": "Zip for a group",
                                    "value": "{{zip}}"
                                },
                                {
                                    "key": "state",
                                    "type": "text",
                                    "description": "State for a group",
                                    "value": "{{state}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putGroup",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putGroup",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putGroup"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}"
                                },
                                {
                                    "key": "name",
                                    "type": "text",
                                    "description": "Name for a group",
                                    "value": "{{name}}"
                                },
                                {
                                    "key": "type",
                                    "type": "text",
                                    "description": "The type of group",
                                    "value": "{{type}}"
                                },
                                {
                                    "key": "status",
                                    "type": "text",
                                    "description": "Group status",
                                    "value": "{{status}}"
                                },
                                {
                                    "key": "sourceID",
                                    "type": "text",
                                    "description": "Source ID for a group",
                                    "value": "{{sourceID}}"
                                },
                                {
                                    "key": "address1",
                                    "type": "text",
                                    "description": "Address line 1 for a group",
                                    "value": "{{address1}}"
                                },
                                {
                                    "key": "address2",
                                    "type": "text",
                                    "description": "Address line 2 for a group",
                                    "value": "{{address2}}"
                                },
                                {
                                    "key": "city",
                                    "type": "text",
                                    "description": "City for a group",
                                    "value": "{{city}}"
                                },
                                {
                                    "key": "zip",
                                    "type": "text",
                                    "description": "Zip for a group",
                                    "value": "{{zip}}"
                                },
                                {
                                    "key": "state",
                                    "type": "text",
                                    "description": "State for a group",
                                    "value": "{{state}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Guest",
            "item": [
                {
                    "name": "getGuestList",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getOrgGuestList",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getOrgGuestList"
                            ],
                            "query": [
                                {
                                    "key": "orgID",
                                    "value": "{{orgID}}",
                                    "description": "Organisation ID",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsFrom",
                                    "value": "{{resultsFrom}}",
                                    "description": "Inferior limit datetime, used to filter guests result, based on latest creation\/modification date",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsTo",
                                    "value": "{{resultsTo}}",
                                    "description": "Superior limit datetime, used to filter guests result, based on latest creation\/modification date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInFrom",
                                    "value": "{{checkInFrom}}",
                                    "description": "Filters guests result to return only guests with check-in date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInTo",
                                    "value": "{{checkInTo}}",
                                    "description": "Filters guests result to return only guests with check-in date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutFrom",
                                    "value": "{{checkOutFrom}}",
                                    "description": "Filters guests result to return only guests with check-out date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutTo",
                                    "value": "{{checkOutTo}}",
                                    "description": "Filters guests result to return only guests with check-out date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "status",
                                    "value": "{{status}}",
                                    "description": "Reservation status",
                                    "disabled": true
                                },
                                {
                                    "key": "sortBy",
                                    "value": "{{sortBy}}",
                                    "description": "Sort By parameter",
                                    "disabled": true
                                },
                                {
                                    "key": "includeGuestInfo",
                                    "value": "{{includeGuestInfo}}",
                                    "description": "If API response should return with more of Guest's information",
                                    "disabled": true
                                },
                                {
                                    "key": "excludeSecondaryGuests",
                                    "value": "{{excludeSecondaryGuests}}",
                                    "description": "If true, response only returns main guest's",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 100",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getGuest",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getGuest",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getGuest"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation Unique Identifier. Required if no guestID is provided.",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "value": "{{guestID}}",
                                    "description": "Guest ID. Required if no reservationID is provided.",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getGuestList",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getGuestList",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getGuestList"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "List of property IDs, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsFrom",
                                    "value": "{{resultsFrom}}",
                                    "description": "Inferior limit datetime, used to filter guests result, based on latest creation\/modification date",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsTo",
                                    "value": "{{resultsTo}}",
                                    "description": "Superior limit datetime, used to filter guests result, based on latest creation\/modification date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInFrom",
                                    "value": "{{checkInFrom}}",
                                    "description": "Filters guests result to return only guests with check-in date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInTo",
                                    "value": "{{checkInTo}}",
                                    "description": "Filters guests result to return only guests with check-in date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutFrom",
                                    "value": "{{checkOutFrom}}",
                                    "description": "Filters guests result to return only guests with check-out date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutTo",
                                    "value": "{{checkOutTo}}",
                                    "description": "Filters guests result to return only guests with check-out date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "status",
                                    "value": "{{status}}",
                                    "description": "Reservation status",
                                    "disabled": true
                                },
                                {
                                    "key": "sortBy",
                                    "value": "{{sortBy}}",
                                    "description": "Sort By parameter",
                                    "disabled": true
                                },
                                {
                                    "key": "includeGuestInfo",
                                    "value": "{{includeGuestInfo}}",
                                    "description": "If API response should return with more of Guest's information",
                                    "disabled": true
                                },
                                {
                                    "key": "excludeSecondaryGuests",
                                    "value": "{{excludeSecondaryGuests}}",
                                    "description": "If true, response only returns main guest's",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 100",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getGuestsModified",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getGuestsModified",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getGuestsModified"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "List of property IDs, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "inHouse",
                                    "value": "{{inHouse}}",
                                    "description": "When used, and true, will return guests only currently in-house. If the guest checks-out, it will not appear on the results.",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsFrom",
                                    "value": "{{resultsFrom}}",
                                    "description": "Inferior limit datetime, used to filter guests result, based on latest creation\/modification date",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsTo",
                                    "value": "{{resultsTo}}",
                                    "description": "Superior limit datetime, used to filter guests result, based on latest creation\/modification date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInFrom",
                                    "value": "{{checkInFrom}}",
                                    "description": "Filters guests result to return only guests with check-in date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInTo",
                                    "value": "{{checkInTo}}",
                                    "description": "Filters guests result to return only guests with check-in date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutFrom",
                                    "value": "{{checkOutFrom}}",
                                    "description": "Filters guests result to return only guests with check-out date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutTo",
                                    "value": "{{checkOutTo}}",
                                    "description": "Filters guests result to return only guests with check-out date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 100",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getGuestsByStatus",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getGuestsByStatus?status={{status}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getGuestsByStatus"
                            ],
                            "query": [
                                {
                                    "key": "status",
                                    "value": "{{status}}",
                                    "description": "Guest status during the period"
                                },
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "ID for the properties to be queried (comma-separated, i.e. 37,345,89).<br \/> It can be omitted if the API key is single-property, or to get results from all properties on an association.",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsFrom",
                                    "value": "{{resultsFrom}}",
                                    "description": "Used to filter guests result, and returns only the guests that were last modified starting on \"resultsFrom\" value",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsTo",
                                    "value": "{{resultsTo}}",
                                    "description": "Used to filter guests result, and returns only the guests that were last modified ending on \"resultsTo\" value",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 100",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getGuestsByFilter",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getGuestsByFilter?status={{status}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getGuestsByFilter"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "List of property IDs, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "status",
                                    "value": "{{status}}",
                                    "description": "Current guest status"
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "value": "{{roomID}}",
                                    "description": "",
                                    "disabled": true
                                },
                                {
                                    "key": "guestName",
                                    "value": "{{guestName}}",
                                    "description": "",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInFrom",
                                    "value": "{{checkInFrom}}",
                                    "description": "Filters guests result to return only guests with check-in date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInTo",
                                    "value": "{{checkInTo}}",
                                    "description": "Filters guests result to return only guests with check-in date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutFrom",
                                    "value": "{{checkOutFrom}}",
                                    "description": "Filters guests result to return only guests with check-out date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutTo",
                                    "value": "{{checkOutTo}}",
                                    "description": "Filters guests result to return only guests with check-out date range ending on this date",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postGuestNote",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postGuestNote",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postGuestNote"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "type": "text",
                                    "description": "Guest ID",
                                    "value": "{{guestID}}"
                                },
                                {
                                    "key": "guestNote",
                                    "type": "text",
                                    "description": "Note to be added to guest profile. It's strictly forbidden to send unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected.",
                                    "value": "{{guestNote}}"
                                },
                                {
                                    "key": "userID",
                                    "type": "text",
                                    "description": "User ID Identify the actual user that is posting the note",
                                    "value": "{{userID}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getGuestNotes",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getGuestNotes?guestID={{guestID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getGuestNotes"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "value": "{{guestID}}",
                                    "description": "Guest ID"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putGuestNote",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putGuestNote",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putGuestNote"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "type": "text",
                                    "description": "Guest ID",
                                    "value": "{{guestID}}"
                                },
                                {
                                    "key": "noteID",
                                    "type": "text",
                                    "description": "Note ID",
                                    "value": "{{noteID}}"
                                },
                                {
                                    "key": "guestNote",
                                    "type": "text",
                                    "description": "Note to be added to guest profile. It's strictly forbidden to send unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected.",
                                    "value": "{{guestNote}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "deleteGuestNote",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/deleteGuestNote?guestID={{guestID}}&noteID={{noteID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "deleteGuestNote"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "value": "{{guestID}}",
                                    "description": "Guest ID"
                                },
                                {
                                    "key": "noteID",
                                    "value": "{{noteID}}",
                                    "description": "Note ID"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putGuest",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putGuest",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putGuest"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "type": "text",
                                    "description": "Valid Guest ID",
                                    "value": "{{guestID}}"
                                },
                                {
                                    "key": "guestFirstName",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestFirstName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestLastName",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestLastName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestGender",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestGender}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestEmail",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestEmail}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestPhone",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestPhone}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCellPhone",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestCellPhone}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestAddress1",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestAddress1}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestAddress2",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestAddress2}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCity",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestCity}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCountry",
                                    "type": "text",
                                    "description": "ISO-Code for Country (2 characters)",
                                    "value": "{{guestCountry}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestState",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestState}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestZip",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestZip}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestBirthDate",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestBirthDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentType",
                                    "type": "text",
                                    "description": "It is mandatory to send all document information<br \/> dni - Identity card<br \/> nie - Residence permit<br \/> na - non selection<br \/>",
                                    "value": "{{guestDocumentType}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentNumber",
                                    "type": "text",
                                    "description": "(mandatory when guestDocumentType is sent)",
                                    "value": "{{guestDocumentNumber}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentIssueDate",
                                    "type": "text",
                                    "description": "(mandatory when guestDocumentType is sent)",
                                    "value": "{{guestDocumentIssueDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentIssuingCountry",
                                    "type": "text",
                                    "description": "ISO-Code for Country (2 characters) (mandatory when guestDocumentType is sent)",
                                    "value": "{{guestDocumentIssuingCountry}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentExpirationDate",
                                    "type": "text",
                                    "description": "(mandatory when guestDocumentType is sent)",
                                    "value": "{{guestDocumentExpirationDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCustomFields[][customFieldName]",
                                    "type": "text",
                                    "description": "",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCustomFields[][customFieldValue]",
                                    "type": "text",
                                    "description": "Custom field value. It's strictly forbidden to send",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCustomFields[][customFieldValue]",
                                    "type": "text",
                                    "description": "Custom field value. It's strictly forbidden to send",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCompanyName",
                                    "type": "text",
                                    "description": "Guest company name",
                                    "value": "{{guestCompanyName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCompanyTaxId",
                                    "type": "text",
                                    "description": "Guest company tax ID",
                                    "value": "{{guestCompanyTaxId}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestTaxId",
                                    "type": "text",
                                    "description": "Guest tax ID unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected.",
                                    "value": "{{guestTaxId}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postGuestDocument",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postGuestDocument",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postGuestDocument"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "type": "text",
                                    "description": "Guest Unique Identifier",
                                    "value": "{{guestID}}"
                                },
                                {
                                    "key": "file",
                                    "type": "text",
                                    "description": "Form-based File Upload<br\/> Allowed file types: <code>*.pdf, *.rtf, *.doc, *.docx, *.txt, *.jpg, *.jpeg, *.png, *.gif, *.csv, *.txt, *.xls, *.xlsx<\/code><br\/> Allowed max file size: 100MB",
                                    "value": "{{file}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postGuest",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postGuest",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postGuest"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation ID",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "guestFirstName",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestFirstName}}"
                                },
                                {
                                    "key": "guestLastName",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestLastName}}"
                                },
                                {
                                    "key": "guestGender",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestGender}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestEmail",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestEmail}}"
                                },
                                {
                                    "key": "guestPhone",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestPhone}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCellPhone",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestCellPhone}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestAddress1",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestAddress1}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestAddress2",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestAddress2}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCity",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestCity}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCountry",
                                    "type": "text",
                                    "description": "ISO-Code for Country (2 characters)",
                                    "value": "{{guestCountry}}"
                                },
                                {
                                    "key": "guestState",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestState}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestZip",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestZip}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestBirthDate",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestBirthDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentType",
                                    "type": "text",
                                    "description": "Document Type<br \/> dni - Identity card<br \/> nie - Residence permit<br \/> na - non selection<br \/>",
                                    "value": "{{guestDocumentType}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentNumber",
                                    "type": "text",
                                    "description": "(mandatory when guestDocumentType is sent)",
                                    "value": "{{guestDocumentNumber}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentIssueDate",
                                    "type": "text",
                                    "description": "(mandatory when guestDocumentType is sent)",
                                    "value": "{{guestDocumentIssueDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentIssuingCountry",
                                    "type": "text",
                                    "description": "Valid ISO-Code for Country (2 characters) (mandatory when guestDocumentType is sent)",
                                    "value": "{{guestDocumentIssuingCountry}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestDocumentExpirationDate",
                                    "type": "text",
                                    "description": "(mandatory when guestDocumentType is sent)",
                                    "value": "{{guestDocumentExpirationDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "customFields[][customFieldName]",
                                    "type": "text",
                                    "description": "Custom Field shortcode.",
                                    "disabled": true
                                },
                                {
                                    "key": "customFields[][customFieldValue]",
                                    "type": "text",
                                    "description": "Custom field value. It's strictly forbidden to send unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected.",
                                    "disabled": true
                                },
                                {
                                    "key": "customFields[][customFieldValue]",
                                    "type": "text",
                                    "description": "Custom field value. It's strictly forbidden to send unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected.",
                                    "disabled": true
                                },
                                {
                                    "key": "guestNote",
                                    "type": "text",
                                    "description": "Note to be added to the Guest",
                                    "value": "{{guestNote}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationNote",
                                    "type": "text",
                                    "description": "Note to be added only to the Reservation.",
                                    "value": "{{reservationNote}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCompanyName",
                                    "type": "text",
                                    "description": "Guest company name",
                                    "value": "{{guestCompanyName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCompanyTaxId",
                                    "type": "text",
                                    "description": "Guest company tax ID",
                                    "value": "{{guestCompanyTaxId}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestTaxId",
                                    "type": "text",
                                    "description": "Guest tax ID",
                                    "value": "{{guestTaxId}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postGuestsToRoom",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postGuestsToRoom",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postGuestsToRoom"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation ID",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "roomID",
                                    "type": "text",
                                    "description": "Room ID already assigned to Reservation",
                                    "value": "{{roomID}}"
                                },
                                {
                                    "key": "guestIDs",
                                    "type": "text",
                                    "description": "Guest ID(s) to be assigned to room. If more than one, send as comma-separated, i.e. 37,345,89",
                                    "value": "{{guestIDs}}"
                                },
                                {
                                    "key": "removeGuestIDs",
                                    "type": "text",
                                    "description": "If sent, will remove guest ID(s) before adding guests sent in guestIDs parameter. If more than one, send as comma-separated, i.e. 37,345,89. Main Guest is never removed.",
                                    "value": "{{removeGuestIDs}}",
                                    "disabled": true
                                },
                                {
                                    "key": "removeAll",
                                    "type": "text",
                                    "description": "If set true, will remove all guests assigned to roomID before assigning guests sent in guestIDs parameter. Main Guest is never removed.",
                                    "value": "{{removeAll}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postGuestPhoto",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postGuestPhoto",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postGuestPhoto"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "guestID",
                                    "type": "text",
                                    "description": "Guest Unique Identifier",
                                    "value": "{{guestID}}"
                                },
                                {
                                    "key": "file",
                                    "type": "text",
                                    "description": "Form-based File Upload<br\/> Allowed file types: <code>*.jpg, *.jpeg, *.png, *.gif<\/code><br\/> Allowed max file size: 15MB",
                                    "value": "{{file}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Hotel",
            "item": [
                {
                    "name": "getHotels",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getHotels",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getHotels"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "List of property IDs, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "propertyName",
                                    "value": "{{propertyName}}",
                                    "description": "Property name, or part of it",
                                    "disabled": true
                                },
                                {
                                    "key": "propertyCity",
                                    "value": "{{propertyCity}}",
                                    "description": "Property city, or part of it",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Page size",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getHotelsNear",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getHotelsNear?baseAddress={{baseAddress}}&baseCity={{baseCity}}&baseZip={{baseZip}}&maxDistance={{maxDistance}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getHotelsNear"
                            ],
                            "query": [
                                {
                                    "key": "baseAddress",
                                    "value": "{{baseAddress}}",
                                    "description": "Address used as base"
                                },
                                {
                                    "key": "baseCity",
                                    "value": "{{baseCity}}",
                                    "description": "City used as base"
                                },
                                {
                                    "key": "baseZip",
                                    "value": "{{baseZip}}",
                                    "description": "Zip code used as base"
                                },
                                {
                                    "key": "maxDistance",
                                    "value": "{{maxDistance}}",
                                    "description": "Max distance (in meters) from the specified address"
                                },
                                {
                                    "key": "propertyName",
                                    "value": "{{propertyName}}",
                                    "description": "Property name, used to filter results",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Page size",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getHotelDetails",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getHotelDetails",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getHotelDetails"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postFile",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postFile",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postFile"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "file",
                                    "type": "text",
                                    "description": "Form-based File Upload<br\/> Allowed file types: <code>*.pdf, *.rtf, *.doc, *.docx, *.txt, *.jpg, *.jpeg, *.png, *.gif, *.csv, *.txt, *.xls, *.xlsx<\/code><br\/> Allowed max file size: 100MB",
                                    "value": "{{file}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getFiles",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getFiles",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getFiles"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "sortBy",
                                    "value": "{{sortBy}}",
                                    "description": "Sort By parameter",
                                    "disabled": true
                                },
                                {
                                    "key": "orderBy",
                                    "value": "{{orderBy}}",
                                    "description": "Order response in DESCending or ASCending order, used together with sortBy",
                                    "disabled": true
                                },
                                {
                                    "key": "name",
                                    "value": "{{name}}",
                                    "description": "Filter filess by name. Include only with names containing specified string",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 100",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "HouseAccount",
            "item": [
                {
                    "name": "getHouseAccountList",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getHouseAccountList",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getHouseAccountList"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getHouseAccountDetails",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getHouseAccountDetails?houseAccountID={{houseAccountID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getHouseAccountDetails"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "houseAccountID",
                                    "value": "{{houseAccountID}}",
                                    "description": "House Account ID to get details for"
                                },
                                {
                                    "key": "resultsFrom",
                                    "value": "{{resultsFrom}}",
                                    "description": "date\"] Inferior limit date, used to filter result records",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsTo",
                                    "value": "{{resultsTo}}",
                                    "description": "date\"] Inferior limit date, used to filter result records",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postNewHouseAccount",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postNewHouseAccount",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postNewHouseAccount"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "accountName",
                                    "type": "text",
                                    "description": "House Account name",
                                    "value": "{{accountName}}"
                                },
                                {
                                    "key": "isPrivate",
                                    "type": "text",
                                    "description": "Whether House Account is available only to user",
                                    "value": "{{isPrivate}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putHouseAccountStatus",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putHouseAccountStatus",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putHouseAccountStatus"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "houseAccountID",
                                    "type": "text",
                                    "description": "House Account ID",
                                    "value": "{{houseAccountID}}"
                                },
                                {
                                    "key": "status",
                                    "type": "text",
                                    "description": "House Account status",
                                    "value": "{{status}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Housekeeping",
            "item": [
                {
                    "name": "getHousekeepingStatus",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getHousekeepingStatus",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getHousekeepingStatus"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "roomTypeIDs",
                                    "value": "{{roomTypeIDs}}",
                                    "description": "Filter by room type ID. If more than one, send as comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "housekeeperIDs",
                                    "value": "{{housekeeperIDs}}",
                                    "description": "Filter by Housekeeper. If more than one, send as comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "roomCondition",
                                    "value": "{{roomCondition}}",
                                    "description": "Condition of room",
                                    "disabled": true
                                },
                                {
                                    "key": "roomOccupied",
                                    "value": "{{roomOccupied}}",
                                    "description": "Flag for current room occupation status",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 5000",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postHousekeepingStatus",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postHousekeepingStatus",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postHousekeepingStatus"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "type": "text",
                                    "description": "Room ID",
                                    "value": "{{roomID}}"
                                },
                                {
                                    "key": "roomCondition",
                                    "type": "text",
                                    "description": "New room condition. If no optional parameters are sent, will switch from current room condition",
                                    "value": "{{roomCondition}}",
                                    "disabled": true
                                },
                                {
                                    "key": "doNotDisturb",
                                    "type": "text",
                                    "description": "New \"do not disturb\" status",
                                    "value": "{{doNotDisturb}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomComments",
                                    "type": "text",
                                    "description": "New room comments.",
                                    "value": "{{roomComments}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postHousekeeper",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postHousekeeper",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postHousekeeper"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "name",
                                    "type": "text",
                                    "description": "Housekeeper name",
                                    "value": "{{name}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putHousekeeper",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putHousekeeper",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putHousekeeper"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "name",
                                    "type": "text",
                                    "description": "Housekeeper name",
                                    "value": "{{name}}"
                                },
                                {
                                    "key": "housekeeperID",
                                    "type": "text",
                                    "description": "Housekeeper ID",
                                    "value": "{{housekeeperID}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getHousekeepers",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getHousekeepers",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getHousekeepers"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "ID for the properties to be queried (comma-separated, i.e. 37,345,89). It can be omitted if the API key is single-property, or to get results from all properties on an association.",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 1000",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postHousekeepingAssignment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postHousekeepingAssignment",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postHousekeepingAssignment"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomIDs",
                                    "type": "text",
                                    "description": "List of room IDs comma-separated, i.e. 37,345,89",
                                    "value": "{{roomIDs}}"
                                },
                                {
                                    "key": "housekeeperID",
                                    "type": "text",
                                    "description": "House keeper ID",
                                    "value": "{{housekeeperID}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Integration",
            "item": [
                {
                    "name": "getAppState",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getAppState",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getAppState"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property identifier to be queried",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postAppState",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postAppState",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postAppState"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property identifier to be updated",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "app_state",
                                    "type": "text",
                                    "description": "Current integration state between third-party and property.",
                                    "value": "{{app_state}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postGovernmentReceipt",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postGovernmentReceipt",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postGovernmentReceipt"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property identifier to be updated",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier. It, or houseAccountID, is necessary.",
                                    "value": "{{reservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "houseAccountID",
                                    "type": "text",
                                    "description": "House Account identifier. It, or reservationID, is necessary.",
                                    "value": "{{houseAccountID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "name",
                                    "type": "text",
                                    "description": "Name of the document. Will be used to describe document in MFD.",
                                    "value": "{{name}}"
                                },
                                {
                                    "key": "url",
                                    "type": "text",
                                    "description": "URL for user to download document.",
                                    "value": "{{url}}"
                                },
                                {
                                    "key": "amount",
                                    "type": "text",
                                    "description": "Value of posted document",
                                    "value": "{{amount}}"
                                },
                                {
                                    "key": "identifier",
                                    "type": "text",
                                    "description": "Receipt Identifier of document. If not sent, a random identifier will be generated.",
                                    "value": "{{identifier}}",
                                    "disabled": true
                                },
                                {
                                    "key": "issueDate",
                                    "type": "text",
                                    "description": "Datetime of document emission, if not sent, current datetime will be assumed.",
                                    "value": "{{issueDate}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getAppSettings",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getAppSettings",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getAppSettings"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property identifier to be queried",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postAppError",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postAppError",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postAppError"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property identifier to be queried",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "timestamp",
                                    "type": "text",
                                    "description": "Date\/time that the error was received by the middleware",
                                    "value": "{{timestamp}}"
                                },
                                {
                                    "key": "eventType",
                                    "type": "text",
                                    "description": "Description for the type of event that caused the error",
                                    "value": "{{eventType}}"
                                },
                                {
                                    "key": "statusCode",
                                    "type": "text",
                                    "description": "HTTP error status code or other error code ID",
                                    "value": "{{statusCode}}",
                                    "disabled": true
                                },
                                {
                                    "key": "description",
                                    "type": "text",
                                    "description": "Description of the error",
                                    "value": "{{description}}",
                                    "disabled": true
                                },
                                {
                                    "key": "errorMessage",
                                    "type": "text",
                                    "description": "Detailed message for error",
                                    "value": "{{errorMessage}}",
                                    "disabled": true
                                },
                                {
                                    "key": "entityType",
                                    "type": "text",
                                    "description": "Type of the entity related to the error",
                                    "value": "{{entityType}}"
                                },
                                {
                                    "key": "entityID",
                                    "type": "text",
                                    "description": "Unique ID for the entity related to the error",
                                    "value": "{{entityID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "userID",
                                    "type": "text",
                                    "description": "User ID for the user that triggered event that caused the error",
                                    "value": "{{userID}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postWebhook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postWebhook",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postWebhook"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "object",
                                    "type": "text",
                                    "description": "Event object",
                                    "value": "{{object}}"
                                },
                                {
                                    "key": "action",
                                    "type": "text",
                                    "description": "Event action",
                                    "value": "{{action}}"
                                },
                                {
                                    "key": "endpointUrl",
                                    "type": "text",
                                    "description": "Endpoint URL",
                                    "value": "{{endpointUrl}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "deleteWebhook",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/deleteWebhook?subscriptionID={{subscriptionID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "deleteWebhook"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "List of property IDs, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "subscriptionID",
                                    "value": "{{subscriptionID}}",
                                    "description": "Subscription ID"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getWebhooks",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getWebhooks",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getWebhooks"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Item",
            "item": [
                {
                    "name": "getItem",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getItem?itemID={{itemID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getItem"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "itemID",
                                    "value": "{{itemID}}",
                                    "description": "Item identifier"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putItemToInventory",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putItemToInventory",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putItemToInventory"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemID",
                                    "type": "text",
                                    "description": "Item identifier",
                                    "value": "{{itemID}}"
                                },
                                {
                                    "key": "itemName",
                                    "type": "text",
                                    "description": "Item name",
                                    "value": "{{itemName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemType",
                                    "type": "text",
                                    "description": "Item type",
                                    "value": "{{itemType}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemSKU",
                                    "type": "text",
                                    "description": "Item SKU. Will be generated if not set",
                                    "value": "{{itemSKU}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemCode",
                                    "type": "text",
                                    "description": "Item code",
                                    "value": "{{itemCode}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemDescription",
                                    "type": "text",
                                    "description": "Item description",
                                    "value": "{{itemDescription}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemPrice",
                                    "type": "text",
                                    "description": "Item price",
                                    "value": "{{itemPrice}}",
                                    "disabled": true
                                },
                                {
                                    "key": "stockInventory",
                                    "type": "text",
                                    "description": "Track stock inventory for this item",
                                    "value": "{{stockInventory}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemQuantity",
                                    "type": "text",
                                    "description": "\u00b9 Current amount of item available",
                                    "value": "{{itemQuantity}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reorderThreshold",
                                    "type": "text",
                                    "description": "\u00b9 Quantity at which to reorder item",
                                    "value": "{{reorderThreshold}}",
                                    "disabled": true
                                },
                                {
                                    "key": "stopSellMet",
                                    "type": "text",
                                    "description": "\u00b9 true - Whether item is at or below value set for stop-sell threshold.",
                                    "value": "{{stopSellMet}}",
                                    "disabled": true
                                },
                                {
                                    "key": "stopSell",
                                    "type": "text",
                                    "description": "\u00b9 Quantity at which to stop selling product.",
                                    "value": "{{stopSell}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getItems",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getItems",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getItems"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "itemCategoryID",
                                    "value": "{{itemCategoryID}}",
                                    "description": "Category identifier",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getItemCategories",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getItemCategories",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getItemCategories"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postItemCategory",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postItemCategory",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postItemCategory"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "categoryName",
                                    "type": "text",
                                    "description": "Category name",
                                    "value": "{{categoryName}}"
                                },
                                {
                                    "key": "categoryCode",
                                    "type": "text",
                                    "description": "Category code",
                                    "value": "{{categoryCode}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemID[]",
                                    "type": "text",
                                    "description": "Existing ItemIDs to reassign to new category",
                                    "value": "{{itemID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "categoryColor",
                                    "type": "text",
                                    "description": "Category color (like #3b7be7)",
                                    "value": "{{categoryColor}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postItemsToInventory",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postItemsToInventory",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postItemsToInventory"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "item[propertyID]",
                                    "type": "text",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "item[itemName]",
                                    "type": "text",
                                    "description": "Item name",
                                    "disabled": true
                                },
                                {
                                    "key": "item[categoryID]",
                                    "type": "text",
                                    "description": "Item category identifier",
                                    "disabled": true
                                },
                                {
                                    "key": "item[itemType]",
                                    "type": "text",
                                    "description": "Item type",
                                    "disabled": true
                                },
                                {
                                    "key": "item[itemSKU]",
                                    "type": "text",
                                    "description": "Item SKU. Will be generated if not set",
                                    "disabled": true
                                },
                                {
                                    "key": "item[itemCode]",
                                    "type": "text",
                                    "description": "Item code",
                                    "disabled": true
                                },
                                {
                                    "key": "item[itemDescription]",
                                    "type": "text",
                                    "description": "Item description",
                                    "disabled": true
                                },
                                {
                                    "key": "item[itemPrice]",
                                    "type": "text",
                                    "description": "Item price<br \/>When ItemPrice is blank the item will be created as Free \/ Complimentaty item without price",
                                    "disabled": true
                                },
                                {
                                    "key": "item[stockInventory]",
                                    "type": "text",
                                    "description": "Track stock inventory for this item",
                                    "disabled": true
                                },
                                {
                                    "key": "item[itemQuantity]",
                                    "type": "text",
                                    "description": "\u00b9 Current amount of item available",
                                    "disabled": true
                                },
                                {
                                    "key": "item[reorderThreshold]",
                                    "type": "text",
                                    "description": "\u00b9 Quantity at which to reorder item",
                                    "disabled": true
                                },
                                {
                                    "key": "item[stopSellMet]",
                                    "type": "text",
                                    "description": "\u00b9 true - Whether item is at or below value set for stop-sell threshold.",
                                    "disabled": true
                                },
                                {
                                    "key": "item[stopSell]",
                                    "type": "text",
                                    "description": "\u00b9 Quantity at which to stop selling product.",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postItem",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postItem",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postItem"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier. Required if no houseAccountID is provided.",
                                    "value": "{{reservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "houseAccountID",
                                    "type": "text",
                                    "description": "House account identifier. Required if no reservationID is provided.",
                                    "value": "{{houseAccountID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "subReservationID",
                                    "type": "text",
                                    "description": "Sub Reservation identifier.",
                                    "value": "{{subReservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemID",
                                    "type": "text",
                                    "description": "Item identifier",
                                    "value": "{{itemID}}"
                                },
                                {
                                    "key": "itemQuantity",
                                    "type": "text",
                                    "description": "Items quantity",
                                    "value": "{{itemQuantity}}"
                                },
                                {
                                    "key": "itemPrice",
                                    "type": "text",
                                    "description": "Item price, if not sent, items registered price will be used",
                                    "value": "{{itemPrice}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemNote",
                                    "type": "text",
                                    "description": "Item note",
                                    "value": "{{itemNote}}",
                                    "disabled": true
                                },
                                {
                                    "key": "itemPaid",
                                    "type": "text",
                                    "description": "If the item is already paid. Note: If set to true, a payment in cash will be registered for the total value of the item, taxes and fees. If this is not the expected behavior, set to false, and register the operation manually. If payments is set, itemPaid is ignored.",
                                    "value": "{{itemPaid}}",
                                    "disabled": true
                                },
                                {
                                    "key": "saleDate",
                                    "type": "text",
                                    "description": "posting date",
                                    "value": "{{saleDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "payments[][paymentType]",
                                    "type": "text",
                                    "description": "Payment method. Use the call [getPaymentMethods](#api-Payment-getPaymentMethods) to get the properties enabled payment methods."
                                },
                                {
                                    "key": "payments[][amount]",
                                    "type": "text",
                                    "description": "payment amount"
                                },
                                {
                                    "key": "payments[][notes]",
                                    "type": "text",
                                    "description": "payment note",
                                    "disabled": true
                                },
                                {
                                    "key": "payments[][notes]",
                                    "type": "text",
                                    "description": "payment note",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postCustomItem",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postCustomItem",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postCustomItem"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier. Required if no houseAccountID is provided.",
                                    "value": "{{reservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "houseAccountID",
                                    "type": "text",
                                    "description": "House account identifier. Required if no reservationID is provided.",
                                    "value": "{{houseAccountID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "referenceID",
                                    "type": "text",
                                    "description": "partner's transaction reference. If exist then Cloudbeds will prevent adding of duplicates",
                                    "value": "{{referenceID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "subReservationID",
                                    "type": "text",
                                    "description": "Sub Reservation identifier",
                                    "value": "{{subReservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "type": "text",
                                    "description": "Room identifier (Ignored if subReservationID exist)",
                                    "value": "{{roomID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "items[][appItemID]",
                                    "type": "text",
                                    "description": "Identifier of item. Future calls using the same ID will use previously sent item name and description. Item name\/description sent in new request will be ignored."
                                },
                                {
                                    "key": "items[][itemSKU]",
                                    "type": "text",
                                    "description": "Item SKU identifier",
                                    "disabled": true
                                },
                                {
                                    "key": "items[][itemQuantity]",
                                    "type": "text",
                                    "description": "Items quantity"
                                },
                                {
                                    "key": "items[][itemPrice]",
                                    "type": "text",
                                    "description": "Item price"
                                },
                                {
                                    "key": "items[][itemName]",
                                    "type": "text",
                                    "description": "Item name"
                                },
                                {
                                    "key": "items[][itemCategoryName]",
                                    "type": "text",
                                    "description": "Item category name",
                                    "disabled": true
                                },
                                {
                                    "key": "items[][itemNote]",
                                    "type": "text",
                                    "description": "Item note",
                                    "disabled": true
                                },
                                {
                                    "key": "items[][itemTaxes][][taxName]",
                                    "type": "text",
                                    "description": "tax name"
                                },
                                {
                                    "key": "items[][itemTaxes][][taxValue]",
                                    "type": "text",
                                    "description": "tax value"
                                },
                                {
                                    "key": "items[][itemTaxes][][taxValue]",
                                    "type": "text",
                                    "description": "tax value"
                                },
                                {
                                    "key": "items[][itemFees][][feeName]",
                                    "type": "text",
                                    "description": "fee name"
                                },
                                {
                                    "key": "items[][itemFees][][feeValue]",
                                    "type": "text",
                                    "description": "fee value"
                                },
                                {
                                    "key": "items[][itemFees][][feeValue]",
                                    "type": "text",
                                    "description": "fee value"
                                },
                                {
                                    "key": "items[][itemFees][][feeValue]",
                                    "type": "text",
                                    "description": "fee value"
                                },
                                {
                                    "key": "saleDate",
                                    "type": "text",
                                    "description": "posting date",
                                    "value": "{{saleDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "type": "text",
                                    "description": "Guest identifier",
                                    "value": "{{guestID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestName",
                                    "type": "text",
                                    "description": "(Ignored if guestID exist)",
                                    "value": "{{guestName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "payments[][paymentType]",
                                    "type": "text",
                                    "description": "Payment method. Use the call [getPaymentMethods](#api-Payment-getPaymentMethods) to get the properties enabled payment methods."
                                },
                                {
                                    "key": "payments[][cardType]",
                                    "type": "text",
                                    "description": "When paymentType is cards or credit, the cardType could be specified (visa, master etc.). The list of types can be found with [getPaymentMethods](#api-Payment-getPaymentMethods) (cardCode inside cardTypes). If omitted, payment is treated as Credit Card Without Details.",
                                    "disabled": true
                                },
                                {
                                    "key": "payments[][amount]",
                                    "type": "text",
                                    "description": "payment amount"
                                },
                                {
                                    "key": "payments[][notes]",
                                    "type": "text",
                                    "description": "payment note",
                                    "disabled": true
                                },
                                {
                                    "key": "payments[][notes]",
                                    "type": "text",
                                    "description": "payment note",
                                    "disabled": true
                                },
                                {
                                    "key": "itemPaid",
                                    "type": "text",
                                    "description": "If the item is already paid. Note: If set to true, a payment in cash will be registered for the total value of the item, taxes and fees. If this is not the expected behavior, set to false, and register the operation manually. (Ignored if payments array exist)",
                                    "value": "{{itemPaid}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "appendCustomItem",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/appendCustomItem",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "appendCustomItem"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier. Required if no houseAccountID is provided.",
                                    "value": "{{reservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "referenceID",
                                    "type": "text",
                                    "description": "partner's transaction reference. If exist then Cloudbeds will prevent adding of duplicates",
                                    "value": "{{referenceID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "subReservationID",
                                    "type": "text",
                                    "description": "Sub Reservation identifier",
                                    "value": "{{subReservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "type": "text",
                                    "description": "Room identifier (Ignored if subReservationID exist)",
                                    "value": "{{roomID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "items[][appItemID]",
                                    "type": "text",
                                    "description": "Identifier of item. Future calls using the same ID will use previously sent item name and description. Item name\/description sent in new request will be ignored."
                                },
                                {
                                    "key": "items[][itemSKU]",
                                    "type": "text",
                                    "description": "Item SKU identifier",
                                    "disabled": true
                                },
                                {
                                    "key": "items[][itemQuantity]",
                                    "type": "text",
                                    "description": "Items quantity"
                                },
                                {
                                    "key": "items[][itemPrice]",
                                    "type": "text",
                                    "description": "Item price"
                                },
                                {
                                    "key": "items[][itemName]",
                                    "type": "text",
                                    "description": "Item name"
                                },
                                {
                                    "key": "items[][itemCategoryName]",
                                    "type": "text",
                                    "description": "Item category name",
                                    "disabled": true
                                },
                                {
                                    "key": "items[][itemNote]",
                                    "type": "text",
                                    "description": "Item note",
                                    "disabled": true
                                },
                                {
                                    "key": "items[][itemTaxes][][taxName]",
                                    "type": "text",
                                    "description": "tax name"
                                },
                                {
                                    "key": "items[][itemTaxes][][taxValue]",
                                    "type": "text",
                                    "description": "tax value"
                                },
                                {
                                    "key": "items[][itemTaxes][][taxValue]",
                                    "type": "text",
                                    "description": "tax value"
                                },
                                {
                                    "key": "items[][itemFees][][feeName]",
                                    "type": "text",
                                    "description": "fee name"
                                },
                                {
                                    "key": "items[][itemFees][][feeValue]",
                                    "type": "text",
                                    "description": "fee value"
                                },
                                {
                                    "key": "items[][itemFees][][feeValue]",
                                    "type": "text",
                                    "description": "fee value"
                                },
                                {
                                    "key": "items[][itemFees][][feeValue]",
                                    "type": "text",
                                    "description": "fee value"
                                },
                                {
                                    "key": "saleDate",
                                    "type": "text",
                                    "description": "posting date",
                                    "value": "{{saleDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "type": "text",
                                    "description": "Guest identifier",
                                    "value": "{{guestID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestName",
                                    "type": "text",
                                    "description": "(Ignored if guestID exist)",
                                    "value": "{{guestName}}",
                                    "disabled": true
                                },
                                {
                                    "key": "payments[][paymentType]",
                                    "type": "text",
                                    "description": "Payment method. Use the call [getPaymentMethods](#api-Payment-getPaymentMethods) to get the properties enabled payment methods."
                                },
                                {
                                    "key": "payments[][cardType]",
                                    "type": "text",
                                    "description": "When paymentType is cards or credit, the cardType could be specified (visa, master etc.). The list of types can be found with [getPaymentMethods](#api-Payment-getPaymentMethods) (cardCode inside cardTypes). If omitted, payment is treated as Credit Card Without Details.",
                                    "disabled": true
                                },
                                {
                                    "key": "payments[][amount]",
                                    "type": "text",
                                    "description": "payment amount"
                                },
                                {
                                    "key": "payments[][notes]",
                                    "type": "text",
                                    "description": "payment note",
                                    "disabled": true
                                },
                                {
                                    "key": "payments[][notes]",
                                    "type": "text",
                                    "description": "payment note",
                                    "disabled": true
                                },
                                {
                                    "key": "itemPaid",
                                    "type": "text",
                                    "description": "If the item is already paid. Note: If set to true, a payment in cash will be registered for the total value of the item, taxes and fees. If this is not the expected behavior, set to false, and register the operation manually. (Ignored if payments array exist)",
                                    "value": "{{itemPaid}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postVoidItem",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postVoidItem",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postVoidItem"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier. reservationID or houseAccountID are necessary.",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "houseAccountID",
                                    "type": "text",
                                    "description": "House Account identifier. reservationID or houseAccountID are necessary.",
                                    "value": "{{houseAccountID}}"
                                },
                                {
                                    "key": "soldProductID",
                                    "type": "text",
                                    "description": "Item identifier",
                                    "value": "{{soldProductID}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Package",
            "item": [
                {
                    "name": "getPackages",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getPackages",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getPackages"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getPackageNames",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getPackageNames",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getPackageNames"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Payment",
            "item": [
                {
                    "name": "getPayments",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getPayments?reservationID={{reservationID}}&houseAccountID={{houseAccountID}}&guestID={{guestID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getPayments"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "\u00b9 ID for the reservation to be queried."
                                },
                                {
                                    "key": "houseAccountID",
                                    "value": "{{houseAccountID}}",
                                    "description": "\u00b9 ID for the house account to be queried."
                                },
                                {
                                    "key": "guestID",
                                    "value": "{{guestID}}",
                                    "description": "\u00b9 ID for the guest to be queried."
                                },
                                {
                                    "key": "createdFrom",
                                    "value": "{{createdFrom}}",
                                    "description": "Datetime (lower limit) to be queried. If not sent, and reservationID informed, will use reservation date. In other cases, current date -7 days is used.",
                                    "disabled": true
                                },
                                {
                                    "key": "createdTo",
                                    "value": "{{createdTo}}",
                                    "description": "Datetime (upper limit) to be queried. If not sent, and reservationID informed, will use check-out date. In other cases, current date is used.",
                                    "disabled": true
                                },
                                {
                                    "key": "includePaymentAllocation",
                                    "value": "{{includePaymentAllocation}}",
                                    "description": "Adds payment allocation to response, when available.",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Page size",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getTransactions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getTransactions",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getTransactions"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "ID for the properties to be queried (comma-separated, i.e. 37,345,89).<br \/> It can be omitted if the API key is single-property, or to get results from all properties on an association.",
                                    "disabled": true
                                },
                                {
                                    "key": "includeDebit",
                                    "value": "{{includeDebit}}",
                                    "description": "If the response should include debit transactions",
                                    "disabled": true
                                },
                                {
                                    "key": "includeCredit",
                                    "value": "{{includeCredit}}",
                                    "description": "If the response should include credit transactions",
                                    "disabled": true
                                },
                                {
                                    "key": "includeDeleted",
                                    "value": "{{includeDeleted}}",
                                    "description": "If the response should include deleted transactions",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation Unique Identifier, used to filter transactions result If reservationID is informed, and dates are not, all transactions with the reservationID will be returned.",
                                    "disabled": true
                                },
                                {
                                    "key": "subReservationID",
                                    "value": "{{subReservationID}}",
                                    "description": "Sub Reservation Identifier, used to filter transactions result",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "value": "{{roomID}}",
                                    "description": "Room ID, used to filter transactions result",
                                    "disabled": true
                                },
                                {
                                    "key": "guestID",
                                    "value": "{{guestID}}",
                                    "description": "Guest ID, used to filter transactions result",
                                    "disabled": true
                                },
                                {
                                    "key": "houseAccountID",
                                    "value": "{{houseAccountID}}",
                                    "description": "House Account ID, used to filter transactions result",
                                    "disabled": true
                                },
                                {
                                    "key": "transactionIDs",
                                    "value": "{{transactionIDs}}",
                                    "description": "List of transaction IDs to be returned, comma-separated, i.e. 37,345,89.",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsFrom",
                                    "value": "{{resultsFrom}}",
                                    "description": "Inferior limit date, used to filter transactions result (posted transaction date)",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsTo",
                                    "value": "{{resultsTo}}",
                                    "description": "Superior limit date, used to filter transactions result (posted transaction date)",
                                    "disabled": true
                                },
                                {
                                    "key": "modifiedFrom",
                                    "value": "{{modifiedFrom}}",
                                    "description": "Inferior limit date, used to filter transactions result",
                                    "disabled": true
                                },
                                {
                                    "key": "modifiedTo",
                                    "value": "{{modifiedTo}}",
                                    "description": "Superior limit date, used to filter transactions result",
                                    "disabled": true
                                },
                                {
                                    "key": "createdFrom",
                                    "value": "{{createdFrom}}",
                                    "description": "Inferior limit datetime, used to filter transactions result (creation date of the transaction). If informed, all other dates are ignored (except createdTo). If createdFrom is informed, but createdTo is not, the call will return all results since this datetime. Necessary only if createdTo is sent. If time portion not given, assumes 00:00:00.",
                                    "disabled": true
                                },
                                {
                                    "key": "createdTo",
                                    "value": "{{createdTo}}",
                                    "description": "Superior limit datetime, used to filter transactions result (creation date of the transaction). If informed (together with createdFrom), all other dates are ignored. If time portion not given, assumes 23:59:59.",
                                    "disabled": true
                                },
                                {
                                    "key": "transactionFilter",
                                    "value": "{{transactionFilter}}",
                                    "description": "Transaction filter is used to filter transactions result",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 100",
                                    "disabled": true
                                },
                                {
                                    "key": "sortBy",
                                    "value": "{{sortBy}}",
                                    "description": "Sort response results by field",
                                    "disabled": true
                                },
                                {
                                    "key": "orderBy",
                                    "value": "{{orderBy}}",
                                    "description": "Order response in DESCending or ASCending order, used together with sortBy",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postPayment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postPayment",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postPayment"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "houseAccountID",
                                    "type": "text",
                                    "description": "House Account identifier is necessary if reservationID not sent",
                                    "value": "{{houseAccountID}}"
                                },
                                {
                                    "key": "subReservationID",
                                    "type": "text",
                                    "description": "The Sub Reservation identifier. reservationID is still mandatory if subReservationID is sent.",
                                    "value": "{{subReservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "type",
                                    "type": "text",
                                    "description": "Payment type. Use the call [getPaymentMethods](#api-Payment-getPaymentMethods) to get the properties enabled payment methods.",
                                    "value": "{{type}}"
                                },
                                {
                                    "key": "amount",
                                    "type": "text",
                                    "description": "Amount paid on this transaction",
                                    "value": "{{amount}}"
                                },
                                {
                                    "key": "cardType",
                                    "type": "text",
                                    "description": "If type = credit, cardType is necessary. Allowed values are property based, but possible strings are: \"visa\",\"master\",\"amex\",\"aura\",\"diners\",\"hiper\",\"elo\",\"Discover\",\"jcb\",\"maestro\",\"dan\",\"PostCard\",\"Eurocard\",\"union_pay\"",
                                    "value": "{{cardType}}"
                                },
                                {
                                    "key": "description",
                                    "type": "text",
                                    "description": "Note to be added to payment",
                                    "value": "{{description}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postCustomPaymentMethod",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postCustomPaymentMethod",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postCustomPaymentMethod"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID, if not sent will retrieve property ID from credentials, only one property ID call.",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "method",
                                    "type": "text",
                                    "description": "Payment Method, value used in future calls. Must be unique for each property and no whitespaces are allowed (use camel case or underline instead). Will be verified against existing Payment Methods, if it exists, will try to enable it.",
                                    "value": "{{method}}"
                                },
                                {
                                    "key": "methodName",
                                    "type": "text",
                                    "description": "Payment Method Name, value used to represent the Payment Method. Can use spaces. If nothing is sent, will use value for method.",
                                    "value": "{{methodName}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getPaymentMethods",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getPaymentMethods",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getPaymentMethods"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "ID for the property to be queried",
                                    "disabled": true
                                },
                                {
                                    "key": "lang",
                                    "value": "{{lang}}",
                                    "description": "Language that payment methods name should return (if available).",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postVoidPayment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postVoidPayment",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postVoidPayment"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "houseAccountID",
                                    "type": "text",
                                    "description": "House Account identifier is necessary if reservationID not sent",
                                    "value": "{{houseAccountID}}"
                                },
                                {
                                    "key": "paymentID",
                                    "type": "text",
                                    "description": "paymentID of transaction that should be voided.",
                                    "value": "{{paymentID}}"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Rate",
            "item": [
                {
                    "name": "getRate",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getRate?roomTypeID={{roomTypeID}}&startDate={{startDate}}&endDate={{endDate}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getRate"
                            ],
                            "query": [
                                {
                                    "key": "roomTypeID",
                                    "value": "{{roomTypeID}}",
                                    "description": "Room Type ID"
                                },
                                {
                                    "key": "startDate",
                                    "value": "{{startDate}}",
                                    "description": "Check-in date"
                                },
                                {
                                    "key": "endDate",
                                    "value": "{{endDate}}",
                                    "description": "Check-out date"
                                },
                                {
                                    "key": "adults",
                                    "value": "{{adults}}",
                                    "description": "Number of adults",
                                    "disabled": true
                                },
                                {
                                    "key": "children",
                                    "value": "{{children}}",
                                    "description": "Number of children",
                                    "disabled": true
                                },
                                {
                                    "key": "detailedRates",
                                    "value": "{{detailedRates}}",
                                    "description": "If the rates need detailed information",
                                    "disabled": true
                                },
                                {
                                    "key": "promoCode",
                                    "value": "{{promoCode}}",
                                    "description": "Return information for one or more specific rate plans by promo code. This parameter is DEPRECATED and not recommended for usage. Use method getRatePlans instead",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getRateJobs",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getRateJobs",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getRateJobs"
                            ],
                            "query": [
                                {
                                    "key": "jobReferenceID",
                                    "value": "{{jobReferenceID}}",
                                    "description": "Filter Rate Jobs by jobReferenceID",
                                    "disabled": true
                                },
                                {
                                    "key": "status",
                                    "value": "{{status}}",
                                    "description": "Filter Rate Jobs based on status",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getRatePlans",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getRatePlans?startDate={{startDate}}&endDate={{endDate}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getRatePlans"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "List of property IDs, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "roomTypeID",
                                    "value": "{{roomTypeID}}",
                                    "description": "List of Room Type IDs, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "promoCode",
                                    "value": "{{promoCode}}",
                                    "description": "Return information for one or more specific rate plans by promo code",
                                    "disabled": true
                                },
                                {
                                    "key": "includePromoCode",
                                    "value": "{{includePromoCode}}",
                                    "description": "Include rate plans with promo code",
                                    "disabled": true
                                },
                                {
                                    "key": "startDate",
                                    "value": "{{startDate}}",
                                    "description": "Check-in date"
                                },
                                {
                                    "key": "endDate",
                                    "value": "{{endDate}}",
                                    "description": "Check-out date"
                                },
                                {
                                    "key": "adults",
                                    "value": "{{adults}}",
                                    "description": "Number of adults",
                                    "disabled": true
                                },
                                {
                                    "key": "children",
                                    "value": "{{children}}",
                                    "description": "Number of children",
                                    "disabled": true
                                },
                                {
                                    "key": "detailedRates",
                                    "value": "{{detailedRates}}",
                                    "description": "If the rates need detailed information",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "patchRate",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PATCH",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/patchRate",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "patchRate"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "rates[][rateID]",
                                    "type": "text",
                                    "description": "Rate ID"
                                },
                                {
                                    "key": "rates[][interval][startDate]",
                                    "type": "text",
                                    "description": "Interval Start date. Format: YYYY-MM-DD"
                                },
                                {
                                    "key": "rates[][interval][endDate]",
                                    "type": "text",
                                    "description": "Interval End date. Format: YYYY-MM-DD"
                                },
                                {
                                    "key": "rates[][interval][rate]",
                                    "type": "text",
                                    "description": "Base rate for the selected date"
                                },
                                {
                                    "key": "rates[][interval][maxLos]",
                                    "type": "text",
                                    "description": "Maximum length of stay for the selected date.",
                                    "disabled": true
                                },
                                {
                                    "key": "rates[][interval][minLos]",
                                    "type": "text",
                                    "description": "Minimum length of stay for the selected date.",
                                    "disabled": true
                                },
                                {
                                    "key": "rates[][interval][closedToArrival]",
                                    "type": "text",
                                    "description": "Whether it is closed to arrival.",
                                    "disabled": true
                                },
                                {
                                    "key": "rates[][interval][closedToDeparture]",
                                    "type": "text",
                                    "description": "Whether it is closed to departure.",
                                    "disabled": true
                                },
                                {
                                    "key": "rates[][interval][cutOff]",
                                    "type": "text",
                                    "description": "Cut off time for the selected date.",
                                    "disabled": true
                                },
                                {
                                    "key": "rates[][interval][lastMinuteBooking]",
                                    "type": "text",
                                    "description": "Last minute bookings.",
                                    "disabled": true
                                },
                                {
                                    "key": "rates[][interval][lastMinuteBooking]",
                                    "type": "text",
                                    "description": "Last minute bookings.",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putRate",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putRate",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putRate"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "rates[][rateID]",
                                    "type": "text",
                                    "description": "Rate ID"
                                },
                                {
                                    "key": "rates[][interval][][startDate]",
                                    "type": "text",
                                    "description": "Interval Start date. Format: YYYY-MM-DD"
                                },
                                {
                                    "key": "rates[][interval][][endDate]",
                                    "type": "text",
                                    "description": "Interval End date. Format: YYYY-MM-DD"
                                },
                                {
                                    "key": "rates[][interval][][rate]",
                                    "type": "text",
                                    "description": "Base rate for the selected date"
                                },
                                {
                                    "key": "rates[][interval][][rate]",
                                    "type": "text",
                                    "description": "Base rate for the selected date"
                                },
                                {
                                    "key": "rates[][interval][][rate]",
                                    "type": "text",
                                    "description": "Base rate for the selected date"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Reservation",
            "item": [
                {
                    "name": "getReservation",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getReservation?reservationID={{reservationID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getReservation"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation Unique Identifier. Obtained from one of the \"Reservations\" group methods"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postReservation",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postReservation",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postReservation"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "sourceID",
                                    "type": "text",
                                    "description": "The third-party source ID for this reservation.",
                                    "value": "{{sourceID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "thirdPartyIdentifier",
                                    "type": "text",
                                    "description": "If it was received from a booking channel, this can be an identifier from that channel.",
                                    "value": "{{thirdPartyIdentifier}}",
                                    "disabled": true
                                },
                                {
                                    "key": "startDate",
                                    "type": "text",
                                    "description": "Check-In date.",
                                    "value": "{{startDate}}"
                                },
                                {
                                    "key": "endDate",
                                    "type": "text",
                                    "description": "Check-Out date.",
                                    "value": "{{endDate}}"
                                },
                                {
                                    "key": "guestFirstName",
                                    "type": "text",
                                    "description": "First name of the guest",
                                    "value": "{{guestFirstName}}"
                                },
                                {
                                    "key": "guestLastName",
                                    "type": "text",
                                    "description": "Last name of the guest",
                                    "value": "{{guestLastName}}"
                                },
                                {
                                    "key": "guestGender",
                                    "type": "text",
                                    "description": "",
                                    "value": "{{guestGender}}",
                                    "disabled": true
                                },
                                {
                                    "key": "guestCountry",
                                    "type": "text",
                                    "description": "Valid ISO-Code for Country (2 characters)",
                                    "value": "{{guestCountry}}"
                                },
                                {
                                    "key": "guestZip",
                                    "type": "text",
                                    "description": "ZIP Code",
                                    "value": "{{guestZip}}"
                                },
                                {
                                    "key": "guestEmail",
                                    "type": "text",
                                    "description": "Guest email",
                                    "value": "{{guestEmail}}"
                                },
                                {
                                    "key": "guestPhone",
                                    "type": "text",
                                    "description": "Guest main phone number",
                                    "value": "{{guestPhone}}",
                                    "disabled": true
                                },
                                {
                                    "key": "estimatedArrivalTime",
                                    "type": "text",
                                    "description": "Estimated Arrival Time, 24-hour format.",
                                    "value": "{{estimatedArrivalTime}}",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][roomTypeID]",
                                    "type": "text",
                                    "description": "Room Type ID"
                                },
                                {
                                    "key": "rooms[][quantity]",
                                    "type": "text",
                                    "description": "Quantity of rooms for the room type ID"
                                },
                                {
                                    "key": "rooms[][roomID]",
                                    "type": "text",
                                    "description": "ID of the individual room to be booked. This feature must be enabled on \"MyBookings\" settings, and the room should be available at the time of the booking or else it will result in an unassigned room. It will automatically override \"quantity\" value to 1 and roomTypeID when used.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][roomRateID]",
                                    "type": "text",
                                    "description": "Specific Rate ID used for the room type ID. Can be ommitted.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][roomRateID]",
                                    "type": "text",
                                    "description": "Specific Rate ID used for the room type ID. Can be ommitted.",
                                    "disabled": true
                                },
                                {
                                    "key": "adults[][roomTypeID]",
                                    "type": "text",
                                    "description": "Room Type ID"
                                },
                                {
                                    "key": "adults[][quantity]",
                                    "type": "text",
                                    "description": "Quantity of adults for the room type ID"
                                },
                                {
                                    "key": "adults[][roomID]",
                                    "type": "text",
                                    "description": "ID of the individual room",
                                    "disabled": true
                                },
                                {
                                    "key": "adults[][roomID]",
                                    "type": "text",
                                    "description": "ID of the individual room",
                                    "disabled": true
                                },
                                {
                                    "key": "children[][roomTypeID]",
                                    "type": "text",
                                    "description": "Room Type ID"
                                },
                                {
                                    "key": "children[][quantity]",
                                    "type": "text",
                                    "description": "Number of children for the room type ID"
                                },
                                {
                                    "key": "children[][roomID]",
                                    "type": "text",
                                    "description": "ID of the individual room",
                                    "disabled": true
                                },
                                {
                                    "key": "children[][roomID]",
                                    "type": "text",
                                    "description": "ID of the individual room",
                                    "disabled": true
                                },
                                {
                                    "key": "paymentMethod",
                                    "type": "text",
                                    "description": "Payment Method of choice.",
                                    "value": "{{paymentMethod}}"
                                },
                                {
                                    "key": "cardToken",
                                    "type": "text",
                                    "description": "Credit Card identifier. Payment Method must be credit. This field should be filled with credit card identifier according to gateway. Only available for Stripe and should send the Customer ID.",
                                    "value": "{{cardToken}}",
                                    "disabled": true
                                },
                                {
                                    "key": "paymentAuthorizationCode",
                                    "type": "text",
                                    "description": "Transaction identifier. Payment Method must be credit. This field should be filled with transaction identifier according to gateway. Only available for Stripe and it should be filled with Charge ID associated to the Payment Intent.",
                                    "value": "{{paymentAuthorizationCode}}",
                                    "disabled": true
                                },
                                {
                                    "key": "customFields[][fieldName]",
                                    "type": "text",
                                    "description": "Internal custom field reference. Must match the registered name (shortcode) in backend. Pay Attention"
                                },
                                {
                                    "key": "customFields[][fieldValue]",
                                    "type": "text",
                                    "description": "Custom field value. It's strictly forbidden to send unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected."
                                },
                                {
                                    "key": "customFields[][fieldValue]",
                                    "type": "text",
                                    "description": "Custom field value. It's strictly forbidden to send unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected."
                                },
                                {
                                    "key": "promoCode",
                                    "type": "text",
                                    "description": "Promotional code. Required for specials and packages that uses it. \"rateID\" parameter required for using \"promoCode\".",
                                    "value": "{{promoCode}}",
                                    "disabled": true
                                },
                                {
                                    "key": "allotmentBlockCode",
                                    "type": "text",
                                    "description": "Allotment block code to add reservation to allotment block.",
                                    "value": "{{allotmentBlockCode}}",
                                    "disabled": true
                                },
                                {
                                    "key": "dateCreated",
                                    "type": "text",
                                    "description": "Date reservation was made. Defaults to current date if omitted.",
                                    "value": "{{dateCreated}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getReservations",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getReservations",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getReservations"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "ID for the properties to be queried (comma-separated, i.e. 37,345,89).<br \/> It can be omitted if the API key is single-property, or to get results from all properties on an association.",
                                    "disabled": true
                                },
                                {
                                    "key": "status",
                                    "value": "{{status}}",
                                    "description": "Filter by current reservation status",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsFrom",
                                    "value": "{{resultsFrom}}",
                                    "description": "Inferior limit datetime, used to filter reservations, based on booking date",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsTo",
                                    "value": "{{resultsTo}}",
                                    "description": "Superior limit datetime, used to filter reservations, based on booking date",
                                    "disabled": true
                                },
                                {
                                    "key": "modifiedFrom",
                                    "value": "{{modifiedFrom}}",
                                    "description": "Inferior limit datetime, used to filter reservations, based on booking modification date",
                                    "disabled": true
                                },
                                {
                                    "key": "modifiedTo",
                                    "value": "{{modifiedTo}}",
                                    "description": "Superior limit datetime, used to filter reservations, based on booking modification date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInFrom",
                                    "value": "{{checkInFrom}}",
                                    "description": "Filters reservations result to return only reservations with check-in date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkInTo",
                                    "value": "{{checkInTo}}",
                                    "description": "Filters reservations result to return only reservations with check-in date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutFrom",
                                    "value": "{{checkOutFrom}}",
                                    "description": "Filters reservations result to return only reservations with check-out date range starting on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "checkOutTo",
                                    "value": "{{checkOutTo}}",
                                    "description": "Filters reservations result to return only reservations with check-out date range ending on this date",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "value": "{{roomID}}",
                                    "description": "Filters reservation with the supplied room ID. CheckIn\/checkOut dates OR status are required. If dates are provided and span more than one day, more than one reservation can be returned. If roomID supplied, roomName is ignored.",
                                    "disabled": true
                                },
                                {
                                    "key": "roomName",
                                    "value": "{{roomName}}",
                                    "description": "Filters reservation with the supplied room name (customizable by each property). CheckIn\/checkOut dates OR status are required. If dates are provided and span more than one day, more than one reservation can be returned.",
                                    "disabled": true
                                },
                                {
                                    "key": "includeGuestsDetails",
                                    "value": "{{includeGuestsDetails}}",
                                    "description": "If guests details should be included or not",
                                    "disabled": true
                                },
                                {
                                    "key": "sortByRecent",
                                    "value": "{{sortByRecent}}",
                                    "description": "Sort response results by most recent action",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 100",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getReservationsWithRateDetails",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getReservationsWithRateDetails",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getReservationsWithRateDetails"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsFrom",
                                    "value": "{{resultsFrom}}",
                                    "description": "Inferior limit datetime, used to filter reservations, based on booking date. If it is not set, will return the reservations starting 2 years ago",
                                    "disabled": true
                                },
                                {
                                    "key": "resultsTo",
                                    "value": "{{resultsTo}}",
                                    "description": "Superior limit datetime, used to filter reservations, based on booking date. If it is not set, will return the reservations up to current date",
                                    "disabled": true
                                },
                                {
                                    "key": "modifiedFrom",
                                    "value": "{{modifiedFrom}}",
                                    "description": "Superior limit datetime, used to filter reservations, based on modification date.",
                                    "disabled": true
                                },
                                {
                                    "key": "modifiedTo",
                                    "value": "{{modifiedTo}}",
                                    "description": "Superior limit datetime, used to filter reservations, based on modification date.",
                                    "disabled": true
                                },
                                {
                                    "key": "sortByRecent",
                                    "value": "{{sortByRecent}}",
                                    "description": "Sort response results by most recent action",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation identifiers, comma-separated, i.e. 37,345,89, used to return transactions limited to the selected reservations.",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationCheckOutFrom",
                                    "value": "{{reservationCheckOutFrom}}",
                                    "description": "Superior limit datetime, used to filter reservations, based on reservation check-out date.",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationCheckOutTo",
                                    "value": "{{reservationCheckOutTo}}",
                                    "description": "Superior limit datetime, used to filter reservations, based on reservation check-out date.",
                                    "disabled": true
                                },
                                {
                                    "key": "includeDeleted",
                                    "value": "{{includeDeleted}}",
                                    "description": "Include deleted reservations",
                                    "disabled": true
                                },
                                {
                                    "key": "excludeStatuses",
                                    "value": "{{excludeStatuses}}",
                                    "description": "List of statuses (separated by comma) to be excluded from search",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Results page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Results page size. Max = 100",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getReservationAssignments",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getReservationAssignments",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getReservationAssignments"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "date",
                                    "value": "{{date}}",
                                    "description": "Date selected to get the assignments. If no date is passed, it will return the results for the current day.",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getReservationInvoiceInformation",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getReservationInvoiceInformation?reservationID={{reservationID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getReservationInvoiceInformation"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation Unique Identifier"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postReservationNote",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postReservationNote",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postReservationNote"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation Unique Identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "reservationNote",
                                    "type": "text",
                                    "description": "Note to be added to reservation",
                                    "value": "{{reservationNote}}"
                                },
                                {
                                    "key": "userID",
                                    "type": "text",
                                    "description": "User ID Identify the actual user that is posting the note",
                                    "value": "{{userID}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getReservationNotes",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getReservationNotes?reservationID={{reservationID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getReservationNotes"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation Unique Identifier"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putReservationNote",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putReservationNote",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putReservationNote"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation Unique Identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "reservationNoteID",
                                    "type": "text",
                                    "description": "Reservation Note ID",
                                    "value": "{{reservationNoteID}}"
                                },
                                {
                                    "key": "reservationNote",
                                    "type": "text",
                                    "description": "Note to be added to reservation",
                                    "value": "{{reservationNote}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "deleteReservationNote",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/deleteReservationNote?reservationID={{reservationID}}&reservationNoteID={{reservationNoteID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "deleteReservationNote"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "value": "{{reservationID}}",
                                    "description": "Reservation Unique Identifier"
                                },
                                {
                                    "key": "reservationNoteID",
                                    "value": "{{reservationNoteID}}",
                                    "description": "Reservation Note ID"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postReservationDocument",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postReservationDocument",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postReservationDocument"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation Unique Identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "file",
                                    "type": "text",
                                    "description": "Form-based File Upload<br\/> Allowed file types: <code>*.pdf, *.rtf, *.doc, *.docx, *.txt, *.jpg, *.jpeg, *.png, *.gif, *.csv, *.txt, *.xls, *.xlsx<\/code><br\/> Allowed max file size: 100MB",
                                    "value": "{{file}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putReservation",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putReservation",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putReservation"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation Unique Identifier, one reservation ID per call.",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "estimatedArrivalTime",
                                    "type": "text",
                                    "description": "Estimated Arrival Time, 24-hour format.",
                                    "value": "{{estimatedArrivalTime}}",
                                    "disabled": true
                                },
                                {
                                    "key": "status",
                                    "type": "text",
                                    "description": "Reservation status<br \/> 'confirmed' - Reservation is confirmed<br \/> 'not_confirmed' - Reservation not passed confirmation<br \/> 'canceled' - Reservation is canceled<br \/> 'checked_in' - Guest is in hotel<br \/> 'checked_out' - Guest already left hotel<br \/> 'no_show' - Guest didn't showed up on check-in date",
                                    "value": "{{status}}",
                                    "disabled": true
                                },
                                {
                                    "key": "checkoutDate",
                                    "type": "text",
                                    "description": "Update the checkoutDate across the whole reservation",
                                    "value": "{{checkoutDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "customFields[][customFieldName]",
                                    "type": "text",
                                    "description": "Internal custom field reference. Must match the registered name in backend. Pay Attention",
                                    "disabled": true
                                },
                                {
                                    "key": "customFields[][customFieldValue]",
                                    "type": "text",
                                    "description": "Custom field value. It's strictly forbidden to send unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected.",
                                    "disabled": true
                                },
                                {
                                    "key": "customFields[][customFieldValue]",
                                    "type": "text",
                                    "description": "Custom field value. It's strictly forbidden to send unencrypted payment data through the API. Numeric values longer than 12 characters and considered valid by Luhn's algorithm will be rejected.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][subReservationID]",
                                    "type": "text",
                                    "description": "Sub Reservation ID of the specific assigned room. Optional.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][roomTypeID]",
                                    "type": "text",
                                    "description": "Room Type ID. Mandatory if rooms are sent.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][checkinDate]",
                                    "type": "text",
                                    "description": "Check-in date for this specific room. Mandatory if rooms are sent.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][checkoutDate]",
                                    "type": "text",
                                    "description": "Check-out date for this specific room. Mandatory if rooms are sent.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][adults]",
                                    "type": "text",
                                    "description": "Quantity of adults for the room. Mandatory if rooms are sent.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][children]",
                                    "type": "text",
                                    "description": "Number of children for the room. Mandatory if rooms are sent.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][rateID]",
                                    "type": "text",
                                    "description": "Rate ID for the room. Optional.",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][rateID]",
                                    "type": "text",
                                    "description": "Rate ID for the room. Optional.",
                                    "disabled": true
                                },
                                {
                                    "key": "dateCreated",
                                    "type": "text",
                                    "description": "Date reservation was made. Do not change if omitted.",
                                    "value": "{{dateCreated}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getSources",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getSources",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getSources"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "ID for the properties to be queried (comma-separated, i.e. 37,345,89).<br \/>",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Room",
            "item": [
                {
                    "name": "getRoomsFeesAndTaxes",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getRoomsFeesAndTaxes?startDate={{startDate}}&endDate={{endDate}}&roomsTotal={{roomsTotal}}&roomsCount={{roomsCount}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getRoomsFeesAndTaxes"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "startDate",
                                    "value": "{{startDate}}",
                                    "description": "Check-in date"
                                },
                                {
                                    "key": "endDate",
                                    "value": "{{endDate}}",
                                    "description": "Check-out date"
                                },
                                {
                                    "key": "roomsTotal",
                                    "value": "{{roomsTotal}}",
                                    "description": "Total value of the rooms to be booked, with included taxes"
                                },
                                {
                                    "key": "roomsCount",
                                    "value": "{{roomsCount}}",
                                    "description": "Number of rooms to be booked"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postRoomAssign",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postRoomAssign",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postRoomAssign"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "subReservationID",
                                    "type": "text",
                                    "description": "Sub Reservation identifier",
                                    "value": "{{subReservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "newRoomID",
                                    "type": "text",
                                    "description": "Room ID of the room that will be assigned.",
                                    "value": "{{newRoomID}}"
                                },
                                {
                                    "key": "roomTypeID",
                                    "type": "text",
                                    "description": "Room Type ID of the room that will be assigned. Need to be informed in case of assignment.",
                                    "value": "{{roomTypeID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "oldRoomID",
                                    "type": "text",
                                    "description": "Room ID of the room that was assigned. Need to be informed in case of reassignment.",
                                    "value": "{{oldRoomID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "overrideRates",
                                    "type": "text",
                                    "description": "Used to confirm if rates are to be override or up-charged\/discounted. Ignored if it the room type of the \"newRoomID\" equals to \"roomTypeID\".",
                                    "value": "{{overrideRates}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postRoomCheckIn",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postRoomCheckIn",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postRoomCheckIn"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "subReservationID",
                                    "type": "text",
                                    "description": "Sub Reservation identifier, allows for granular control over what room is being checked-in. If sent, roomID is ignored.",
                                    "value": "{{subReservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "type": "text",
                                    "description": "Room ID of the room that will be checked-in.",
                                    "value": "{{roomID}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postRoomCheckOut",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postRoomCheckOut",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postRoomCheckOut"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "reservationID",
                                    "type": "text",
                                    "description": "Reservation identifier",
                                    "value": "{{reservationID}}"
                                },
                                {
                                    "key": "subReservationID",
                                    "type": "text",
                                    "description": "Sub Reservation identifier, allows for granular control over what room is being checked out. If sent, roomID is ignored.",
                                    "value": "{{subReservationID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "type": "text",
                                    "description": "Room ID of the room that will be checked out.",
                                    "value": "{{roomID}}",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getReservationRoomDetails",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getReservationRoomDetails?subReservationID={{subReservationID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getReservationRoomDetails"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "subReservationID",
                                    "value": "{{subReservationID}}",
                                    "description": "Sub Reservation ID of the specific assigned room"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "postRoomBlock",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/postRoomBlock",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "postRoomBlock"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomBlockType",
                                    "type": "text",
                                    "description": "Room block type. \u2018blocked\u2019 - Room block. \u2018out_of_service\u2019 - Out of service block",
                                    "value": "{{roomBlockType}}"
                                },
                                {
                                    "key": "roomBlockReason",
                                    "type": "text",
                                    "description": "Room block reason",
                                    "value": "{{roomBlockReason}}"
                                },
                                {
                                    "key": "startDate",
                                    "type": "text",
                                    "description": "Room block start date",
                                    "value": "{{startDate}}"
                                },
                                {
                                    "key": "endDate",
                                    "type": "text",
                                    "description": "Room block end date",
                                    "value": "{{endDate}}"
                                },
                                {
                                    "key": "rooms[][roomID]",
                                    "type": "text",
                                    "description": "Room ID"
                                },
                                {
                                    "key": "rooms[][roomTypeID]",
                                    "type": "text",
                                    "description": "Room type ID"
                                },
                                {
                                    "key": "rooms[][roomTypeID]",
                                    "type": "text",
                                    "description": "Room type ID"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getRoomBlocks",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getRoomBlocks",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getRoomBlocks"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "roomBlockID",
                                    "value": "{{roomBlockID}}",
                                    "description": "Room block ID",
                                    "disabled": true
                                },
                                {
                                    "key": "roomTypeID",
                                    "value": "{{roomTypeID}}",
                                    "description": "Room type ID",
                                    "disabled": true
                                },
                                {
                                    "key": "roomID",
                                    "value": "{{roomID}}",
                                    "description": "Room ID",
                                    "disabled": true
                                },
                                {
                                    "key": "startDate",
                                    "value": "{{startDate}}",
                                    "description": "date\"] Start date - will filter for any room blocks that include this date",
                                    "disabled": true
                                },
                                {
                                    "key": "endDate",
                                    "value": "{{endDate}}",
                                    "description": "date\"] End date - will filter for any room blocks that include this date",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Page size",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "putRoomBlock",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/putRoomBlock",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "putRoomBlock"
                            ]
                        },
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "propertyID",
                                    "type": "text",
                                    "description": "Property ID",
                                    "value": "{{propertyID}}",
                                    "disabled": true
                                },
                                {
                                    "key": "roomBlockID",
                                    "type": "text",
                                    "description": "Room block ID",
                                    "value": "{{roomBlockID}}"
                                },
                                {
                                    "key": "roomBlockReason",
                                    "type": "text",
                                    "description": "Room block reason",
                                    "value": "{{roomBlockReason}}",
                                    "disabled": true
                                },
                                {
                                    "key": "startDate",
                                    "type": "text",
                                    "description": "Room block start date",
                                    "value": "{{startDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "endDate",
                                    "type": "text",
                                    "description": "Room block end date",
                                    "value": "{{endDate}}",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][roomID]",
                                    "type": "text",
                                    "description": "Room ID",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][roomTypeID]",
                                    "type": "text",
                                    "description": "Room type ID",
                                    "disabled": true
                                },
                                {
                                    "key": "rooms[][roomTypeID]",
                                    "type": "text",
                                    "description": "Room type ID",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "deleteRoomBlock",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/deleteRoomBlock?roomBlockID={{roomBlockID}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "deleteRoomBlock"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "roomBlockID",
                                    "value": "{{roomBlockID}}",
                                    "description": "Room block ID"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getRoomTypes",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getRoomTypes",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getRoomTypes"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "Property ID list, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "roomTypeIDs",
                                    "value": "{{roomTypeIDs}}",
                                    "description": "Room Type ID list, If more than one, send as comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "startDate",
                                    "value": "{{startDate}}",
                                    "description": "Check-in date. Required for the rates to be returned.",
                                    "disabled": true
                                },
                                {
                                    "key": "endDate",
                                    "value": "{{endDate}}",
                                    "description": "Check-out date. Required for the rates to be returned.",
                                    "disabled": true
                                },
                                {
                                    "key": "adults",
                                    "value": "{{adults}}",
                                    "description": "Number of adults. Required for the rates to be returned.",
                                    "disabled": true
                                },
                                {
                                    "key": "children",
                                    "value": "{{children}}",
                                    "description": "Number of children. Required for the rates to be returned.",
                                    "disabled": true
                                },
                                {
                                    "key": "detailedRates",
                                    "value": "{{detailedRates}}",
                                    "description": "If detailed rates are expected",
                                    "disabled": true
                                },
                                {
                                    "key": "roomTypeName",
                                    "value": "{{roomTypeName}}",
                                    "description": "Room type name, used to filter",
                                    "disabled": true
                                },
                                {
                                    "key": "propertyCity",
                                    "value": "{{propertyCity}}",
                                    "description": "Hotel city, used to filter",
                                    "disabled": true
                                },
                                {
                                    "key": "propertyName",
                                    "value": "{{propertyName}}",
                                    "description": "Hotel name, used to filter",
                                    "disabled": true
                                },
                                {
                                    "key": "maxGuests",
                                    "value": "{{maxGuests}}",
                                    "description": "Max number of guests, used to filter",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Page size",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getAvailableRoomTypes",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getAvailableRoomTypes?startDate={{startDate}}&endDate={{endDate}}&rooms={{rooms}}&adults={{adults}}&children={{children}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getAvailableRoomTypes"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "Property ID list, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "startDate",
                                    "value": "{{startDate}}",
                                    "description": "Check-In date."
                                },
                                {
                                    "key": "endDate",
                                    "value": "{{endDate}}",
                                    "description": "Check-Out date."
                                },
                                {
                                    "key": "rooms",
                                    "value": "{{rooms}}",
                                    "description": "Number of rooms."
                                },
                                {
                                    "key": "adults",
                                    "value": "{{adults}}",
                                    "description": "Number of adults."
                                },
                                {
                                    "key": "children",
                                    "value": "{{children}}",
                                    "description": "Number of children."
                                },
                                {
                                    "key": "promoCode",
                                    "value": "{{promoCode}}",
                                    "description": "Promotional code",
                                    "disabled": true
                                },
                                {
                                    "key": "detailedRates",
                                    "value": "{{detailedRates}}",
                                    "description": "If detailed rates are expected",
                                    "disabled": true
                                },
                                {
                                    "key": "sort",
                                    "value": "{{sort}}",
                                    "description": "Sort parameter",
                                    "disabled": true
                                },
                                {
                                    "key": "order",
                                    "value": "{{order}}",
                                    "description": "",
                                    "disabled": true
                                },
                                {
                                    "key": "minRate",
                                    "value": "{{minRate}}",
                                    "description": "Minimum daily rate. Used to filter results",
                                    "disabled": true
                                },
                                {
                                    "key": "maxRate",
                                    "value": "{{maxRate}}",
                                    "description": "Maximum daily rate. Used to filter results",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Page size",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getRooms",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getRooms?roomTypeID={{roomTypeID}}&roomTypeNameShort={{roomTypeNameShort}}",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getRooms"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "Property ID list, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                },
                                {
                                    "key": "roomTypeID",
                                    "value": "{{roomTypeID}}",
                                    "description": "Room type ID, comma-separated, i.e. 37,345,89"
                                },
                                {
                                    "key": "roomTypeNameShort",
                                    "value": "{{roomTypeNameShort}}",
                                    "description": "Room Type (short-version)"
                                },
                                {
                                    "key": "startDate",
                                    "value": "{{startDate}}",
                                    "description": "Initial stay date. If sent, only returns unassigned rooms in this period. If not sent, will return all rooms available in property. Necessary if endDate is sent.",
                                    "disabled": true
                                },
                                {
                                    "key": "endDate",
                                    "value": "{{endDate}}",
                                    "description": "Final stay date. Necessary if startDate is sent.",
                                    "disabled": true
                                },
                                {
                                    "key": "pageNumber",
                                    "value": "{{pageNumber}}",
                                    "description": "Page number",
                                    "disabled": true
                                },
                                {
                                    "key": "pageSize",
                                    "value": "{{pageSize}}",
                                    "description": "Page size",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "getRoomsUnassigned",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getRoomsUnassigned",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getRoomsUnassigned"
                            ],
                            "query": [
                                {
                                    "key": "propertyIDs",
                                    "value": "{{propertyIDs}}",
                                    "description": "List of property IDs, comma-separated, i.e. 37,345,89",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Taxes and Fees",
            "item": [
                {
                    "name": "getTaxesAndFees",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getTaxesAndFees",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getTaxesAndFees"
                            ],
                            "query": [
                                {
                                    "key": "propertyID",
                                    "value": "{{propertyID}}",
                                    "description": "Property ID",
                                    "disabled": true
                                },
                                {
                                    "key": "includeDeleted",
                                    "value": "{{includeDeleted}}",
                                    "description": "If the response should include deleted transactions",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "User",
            "item": [
                {
                    "name": "getUsers",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text\/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "",
                                    "tests[\"Response time is less than 2000\"] = responseTime < 2000;",
                                    "",
                                    "var jsonData = JSON.parse(responseBody);",
                                    "tests[\"success = true\"] = jsonData.success === true;",
                                    ""
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": {
                            "key": "Authorization",
                            "value": "Bearer {{access_token}}"
                        },
                        "url": {
                            "raw": "{{url}}\/getUsers",
                            "host": [
                                "{{url}}"
                            ],
                            "path": [
                                "getUsers"
                            ],
                            "query": [
                                {
                                    "key": "property_ids",
                                    "value": "{{property_ids}}",
                                    "description": "Property numeric identifiers (comma-separated, i.e. 37,345,89)",
                                    "disabled": true
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ]
}